[
  {
    "objectID": "FinalProjectEDA.html",
    "href": "FinalProjectEDA.html",
    "title": "Final Project",
    "section": "",
    "text": "Briefly describe the data and variables we have to work with (only the ones that will be investigated/used in analysis)\nDescribe the purpose of the EDA and ultimate goal of modeling\n\n\n\n\n\nlibrary(dplyr)\nlibrary(ggplot2)\nlibrary(scales)\n\n\nUse relative path to import the data\n\n\n# Use a relative path to import the data. Convert variables to factors with \n# meaningful names\n\ndiabetes_df &lt;- read.csv(\"diabetes_binary_health_indicators_BRFSS2015.csv\")\n\ndiabetes_df &lt;- as_tibble(diabetes_df)\n\ndiabetes_df\n\n# A tibble: 253,680 × 22\n   Diabetes_binary HighBP HighChol CholCheck   BMI Smoker Stroke\n             &lt;dbl&gt;  &lt;dbl&gt;    &lt;dbl&gt;     &lt;dbl&gt; &lt;dbl&gt;  &lt;dbl&gt;  &lt;dbl&gt;\n 1               0      1        1         1    40      1      0\n 2               0      0        0         0    25      1      0\n 3               0      1        1         1    28      0      0\n 4               0      1        0         1    27      0      0\n 5               0      1        1         1    24      0      0\n 6               0      1        1         1    25      1      0\n 7               0      1        0         1    30      1      0\n 8               0      1        1         1    25      1      0\n 9               1      1        1         1    30      1      0\n10               0      0        0         1    24      0      0\n# ℹ 253,670 more rows\n# ℹ 15 more variables: HeartDiseaseorAttack &lt;dbl&gt;, PhysActivity &lt;dbl&gt;,\n#   Fruits &lt;dbl&gt;, Veggies &lt;dbl&gt;, HvyAlcoholConsump &lt;dbl&gt;, AnyHealthcare &lt;dbl&gt;,\n#   NoDocbcCost &lt;dbl&gt;, GenHlth &lt;dbl&gt;, MentHlth &lt;dbl&gt;, PhysHlth &lt;dbl&gt;,\n#   DiffWalk &lt;dbl&gt;, Sex &lt;dbl&gt;, Age &lt;dbl&gt;, Education &lt;dbl&gt;, Income &lt;dbl&gt;\n\n\nCheck for missingness\n\nlist(\"Number of missing values in data set\" = sum(is.na(diabetes_df)))\n\n$`Number of missing values in data set`\n[1] 0\n\n\n\ndiabetes_df &lt;- diabetes_df |&gt;\n  rename(\"HasDiabetes\" = Diabetes_binary, \n         \"HighCholesterol\" = HighChol, \n         \"CholesterolChecked\" = CholCheck, \n         \"ConsumesFruits\" = Fruits, \n         \"ConsumesVeggies\" = Veggies, \n         \"HeavyAlcoholUse\" = HvyAlcoholConsump,\n         \"HasHealthcare\" = AnyHealthcare,\n         \"ExpensiveTreatment\" = NoDocbcCost,\n         \"GeneralHealth\" = GenHlth,\n         \"BadMentalHealth\" = MentHlth,\n         \"BadPhysicalHealth\" = PhysHlth,\n         \"DifficultyWalking\" = DiffWalk) |&gt;\n  mutate(across(c(1:4, 6:15, 18:22), as.factor))\n\nstr(diabetes_df)\n\ntibble [253,680 × 22] (S3: tbl_df/tbl/data.frame)\n $ HasDiabetes         : Factor w/ 2 levels \"0\",\"1\": 1 1 1 1 1 1 1 1 2 1 ...\n $ HighBP              : Factor w/ 2 levels \"0\",\"1\": 2 1 2 2 2 2 2 2 2 1 ...\n $ HighCholesterol     : Factor w/ 2 levels \"0\",\"1\": 2 1 2 1 2 2 1 2 2 1 ...\n $ CholesterolChecked  : Factor w/ 2 levels \"0\",\"1\": 2 1 2 2 2 2 2 2 2 2 ...\n $ BMI                 : num [1:253680] 40 25 28 27 24 25 30 25 30 24 ...\n $ Smoker              : Factor w/ 2 levels \"0\",\"1\": 2 2 1 1 1 2 2 2 2 1 ...\n $ Stroke              : Factor w/ 2 levels \"0\",\"1\": 1 1 1 1 1 1 1 1 1 1 ...\n $ HeartDiseaseorAttack: Factor w/ 2 levels \"0\",\"1\": 1 1 1 1 1 1 1 1 2 1 ...\n $ PhysActivity        : Factor w/ 2 levels \"0\",\"1\": 1 2 1 2 2 2 1 2 1 1 ...\n $ ConsumesFruits      : Factor w/ 2 levels \"0\",\"1\": 1 1 2 2 2 2 1 1 2 1 ...\n $ ConsumesVeggies     : Factor w/ 2 levels \"0\",\"1\": 2 1 1 2 2 2 1 2 2 2 ...\n $ HeavyAlcoholUse     : Factor w/ 2 levels \"0\",\"1\": 1 1 1 1 1 1 1 1 1 1 ...\n $ HasHealthcare       : Factor w/ 2 levels \"0\",\"1\": 2 1 2 2 2 2 2 2 2 2 ...\n $ ExpensiveTreatment  : Factor w/ 2 levels \"0\",\"1\": 1 2 2 1 1 1 1 1 1 1 ...\n $ GeneralHealth       : Factor w/ 5 levels \"1\",\"2\",\"3\",\"4\",..: 5 3 5 2 2 2 3 3 5 2 ...\n $ BadMentalHealth     : num [1:253680] 18 0 30 0 3 0 0 0 30 0 ...\n $ BadPhysicalHealth   : num [1:253680] 15 0 30 0 0 2 14 0 30 0 ...\n $ DifficultyWalking   : Factor w/ 2 levels \"0\",\"1\": 2 1 2 1 1 1 1 2 2 1 ...\n $ Sex                 : Factor w/ 2 levels \"0\",\"1\": 1 1 1 1 1 2 1 1 1 2 ...\n $ Age                 : Factor w/ 13 levels \"1\",\"2\",\"3\",\"4\",..: 9 7 9 11 11 10 9 11 9 8 ...\n $ Education           : Factor w/ 6 levels \"1\",\"2\",\"3\",\"4\",..: 4 6 4 3 5 6 6 4 5 4 ...\n $ Income              : Factor w/ 8 levels \"1\",\"2\",\"3\",\"4\",..: 3 1 8 6 4 8 7 4 1 3 ...\n\n\nReview of our data frame structure shows that we have successfully renamed our variables and converted the categorical variables to factors.\nNext we will generate a summary of the variables to provide insight on what we will expect to see during our EDA.\n\nprint(list(\"Summary of Diabetes Data Frame Variables\"=summary(diabetes_df)))\n\n$`Summary of Diabetes Data Frame Variables`\n HasDiabetes HighBP     HighCholesterol CholesterolChecked      BMI       \n 0:218334    0:144851   0:146089        0:  9470           Min.   :12.00  \n 1: 35346    1:108829   1:107591        1:244210           1st Qu.:24.00  \n                                                           Median :27.00  \n                                                           Mean   :28.38  \n                                                           3rd Qu.:31.00  \n                                                           Max.   :98.00  \n                                                                          \n Smoker     Stroke     HeartDiseaseorAttack PhysActivity ConsumesFruits\n 0:141257   0:243388   0:229787             0: 61760     0: 92782      \n 1:112423   1: 10292   1: 23893             1:191920     1:160898      \n                                                                       \n                                                                       \n                                                                       \n                                                                       \n                                                                       \n ConsumesVeggies HeavyAlcoholUse HasHealthcare ExpensiveTreatment GeneralHealth\n 0: 47839        0:239424        0: 12417      0:232326           1:45299      \n 1:205841        1: 14256        1:241263      1: 21354           2:89084      \n                                                                  3:75646      \n                                                                  4:31570      \n                                                                  5:12081      \n                                                                               \n                                                                               \n BadMentalHealth  BadPhysicalHealth DifficultyWalking Sex       \n Min.   : 0.000   Min.   : 0.000    0:211005          0:141974  \n 1st Qu.: 0.000   1st Qu.: 0.000    1: 42675          1:111706  \n Median : 0.000   Median : 0.000                                \n Mean   : 3.185   Mean   : 4.242                                \n 3rd Qu.: 2.000   3rd Qu.: 3.000                                \n Max.   :30.000   Max.   :30.000                                \n                                                                \n      Age        Education      Income     \n 9      :33244   1:   174   8      :90385  \n 10     :32194   2:  4043   7      :43219  \n 8      :30832   3:  9478   6      :36470  \n 7      :26314   4: 62750   5      :25883  \n 11     :23533   5: 69910   4      :20135  \n 6      :19819   6:107325   3      :15994  \n (Other):87744              (Other):21594  \n\n\nBMI appears to be generally centered with outliers in the right tail. MentalHealth and PhysicalHealth both appear to have a tendency response of “0” in the survey. HighBP, HighCholesterol, Smoker, GeneralHealth, Sex and Age each have a fairly equal distribution of responses. The remaining binary variables of CholesterolChecked, Stroke, HeartDiseaseorAttack, PhysActivity, ConsumesFruits, ConsumesVeggies, HeavyAlcoholUse, HasHealthcare, ExpensiveTreatment, and DifficultyWalking each heavily favor one response over the other. The variables of Education and Income both show an increase in responses as the category range values increase.\n\n\n\n\nProduce meaningful summary stats and plots about the data being analyzed, particularly with how the variables relate to the response\nDo EDA on the complete data set\nEnsure narratives explain what we are exploring and what the summaries/graphs created say about the relationships in the data\n\nThe first variable we will investigate is HighBP. Review of the variable summary information shows\n\nprint(list(\"Summary of HighBP\"=summary(diabetes_df$HighBP)))\n\n$`Summary of HighBP`\n     0      1 \n144851 108829 \n\n\nthere are greater number of observations of PTs not having high blood pressure to those that do in a ratio of approximately 7:5. This is fairly close to being 1:1, so any differences between the HasDiabetes categories would be due to interactions between the variables.\nUsing a bar plot to observe HighBP with respect to HasDiabetes shows\n\nHighBP_by &lt;- diabetes_df |&gt;\n  group_by(HasDiabetes, HighBP) |&gt;\n  summarize(count = n())\n\nHighPB_plot &lt;- ggplot(HighBP_by, aes(HasDiabetes, count, fill=HighBP)) +\n  geom_bar(stat = \"identity\", position = position_dodge()) +\n  geom_text(aes(label = count), position = position_dodge(width=0.9), vjust=-0.25) +\n  scale_y_continuous(labels = comma) +\n  labs(title = \"Bar Plot of HighBP by HasDiabetes\", x=\"Has Diabetes\", y=\"# of PTs\")\n\nHighPB_plot\n\n\n\n\n\n\n\n\nthat the majority of PTs with diabetes have high blood pressure while the majority of PTs without diabetes do not have high blood pressure. The observations in the “No” HasDiabetes category have a “No” to “Yes” HighBP ratio of approximately 68:41, which is close to 2:1. The observations in the “Yes” HasDiabetes category have a “No” to “Yes” HighBP ratio of approximately 1:3. This flip in ratios between the HasDiabetes groups suggests that there is a relationship between HasDiabetes and HighBP.\nThe next variable that we will investigate is HighCholesterol. Review of the variable summary information shows\n\nprint(list(\"Summary of HighCholesterol\"=summary(diabetes_df$HighCholesterol)))\n\n$`Summary of HighCholesterol`\n     0      1 \n146089 107591 \n\n\nthere is approximately a 15:11 “No” to “Yes” ratio of HighCholesterol observations. This distribution is fairly close to being 1:1, so any differences between the HasDiabetes categories would be due to interactions between the variables.\nUsing a bar plot to observe HighCholesterol with respect to HasDiabetes we see\n\nHighCholesterol_by &lt;- diabetes_df |&gt;\n  group_by(HasDiabetes, HighCholesterol) |&gt;\n  summarize(count = n())\n\nHighCholesterol_plot &lt;- ggplot(HighCholesterol_by, aes(HasDiabetes, count, fill=HighCholesterol)) +\n  geom_bar(stat = \"identity\", position = position_dodge()) +\n  geom_text(aes(label = count), position = position_dodge(width=0.9), hjust=0.5) +\n  scale_y_continuous(labels = comma) +\n  labs(title=\"Bar Plot of HighCholesterol by HasDiabetes\", x=\"Has Diabetes\", y= \"# of PTs\") +\n  coord_flip()\n\nHighCholesterol_plot\n\n\n\n\n\n\n\n\nthat the ratios change between the HasDiabetes groups. While the ratios favor low cholesterol in the group without diabetes, they favor high cholesterol levels in the group with diabetes. There is approximately a 13:8 (nears 2:1) ratio of “No” to “Yes” HighCholesterol responses in the “No” HasDiabetes group. There is approximately a 11:23 (nears 1:2) ratio of “No” to “Yes” HighCholesterol responses in the “Yes” HasDiabetes group. The shift in ratios between the groups trending towards PTs with diabetes having high cholesterol suggests that there is a relationship between HasDiabetes and HighCholesterol.\nThe next variable we will investigate is CholesterolChecked. Review of the variable summary information shows\n\nprint(list(\"Summary of CholesterolChecked\"=summary(diabetes_df$CholesterolChecked)))\n\n$`Summary of CholesterolChecked`\n     0      1 \n  9470 244210 \n\n\nthat the overwhelming majority of PTs had their cholesterol checked at a ratio of 1:27 when compared to those who did not. Any differences between the HasDiabetes groups may be heavily influenced by the number of observations in each group more than the interaction between the variables. Review of a bar plot of CholesterolChecked with respect to HasDiabetes shows\n\nCholesterolChecked_by &lt;- diabetes_df |&gt;\n  group_by(HasDiabetes, CholesterolChecked) |&gt;\n  summarize(count = n())\n\n`summarise()` has grouped output by 'HasDiabetes'. You can override using the\n`.groups` argument.\n\nCholesterolChecked_plot &lt;- ggplot(CholesterolChecked_by, aes(HasDiabetes, count, fill=CholesterolChecked)) +\n  geom_bar(stat = \"identity\", position = position_dodge()) +\n  geom_text(aes(label = count), position = position_dodge(width=0.9), vjust=-0.25) +\n  scale_y_continuous(labels = comma) +\n  labs(title=\"Bar Plot of CholesterolChecked by HasDiabetes\", x=\"Has Diabetes\", y= \"# of PTs\")\n\nCholesterolChecked_plot\n\n\n\n\n\n\n\n\nthat the group of “Yes” CholesterolChecked responses dominates both categories of HasDiabetes.\nThe “No” HasDiabetes group has a “No” to “Yes” CholesterolChecked ratio of approximately 1:23. The “YES” HasDiabetes group has a “No” to “Yes” CholesterolChecked ratio of approximately 1:146. This information suggests that there is an increased likelihood of a PT having diabetes if they have their cholesterol checked. Because it is unlikely that checking cholesterol levels will cause diabetes, CholesterolChecked is not a good variable for use in prediction modeling.\nThe next variable we will investigte is BMI. Review of the variable summary information shows\n\nprint(list(\"Summary of BMI\"=summary(diabetes_df$BMI)))\n\n$`Summary of BMI`\n   Min. 1st Qu.  Median    Mean 3rd Qu.    Max. \n  12.00   24.00   27.00   28.38   31.00   98.00 \n\n\nthat the data has an IQR span of 7, a Median of 27, and Mean of 28.38. This tells us the data is tightly grouped together with the Min of 12 and Max of 98 being outliers. A histogram of BMI shows\n\nBMI_histogram &lt;- ggplot(diabetes_df, aes(BMI)) +\n  geom_histogram(aes(y=..density..), binwidth=1, fill=\"#CC0000\", color=\"lightgray\") +\n  labs(title=\"Histogram of BMI\", y=\"Density (# of PTs)\") +\n  scale_x_continuous(breaks = seq(0, 100, by = 10)) +\n  stat_function(fun=dnorm, args=list(mean=mean(diabetes_df$BMI), sd=sd(diabetes_df$BMI))) \n\nBMI_histogram\n\nWarning: The dot-dot notation (`..density..`) was deprecated in ggplot2 3.4.0.\nℹ Please use `after_stat(density)` instead.\n\n\n\n\n\n\n\n\n\nthat the data follows a generally normal distribution with some skewness to the right. The histogram also confirms there are outleirs in the BMI ranges of 12-14 and 50-98.\nSplitting the BMI histogram with respect to HasDiabetes shows\n\nBMI_by_histplot &lt;- ggplot(diabetes_df, aes(BMI)) +\n  geom_histogram(aes(y=..density..), binwidth=1, fill=\"#CC0000\", color=\"lightgray\") +\n  labs(title=\"Histogram of BMI by HasDiabetes\", y=\"Density (# of PTs)\") +\n  scale_x_continuous(breaks = seq(0, 100, by = 10)) +\n  stat_function(fun=dnorm, args=list(mean=mean(diabetes_df$BMI), sd=sd(diabetes_df$BMI))) +\n  facet_grid(~HasDiabetes)\n\nBMI_by_histplot\n\n\n\n\n\n\n\n\nthat the distribution of observations in the “No” HasDiabetes group has a center near a BMI of 25 while the “Yes” HasDiabetes group has a center near a BMI of 30 Review of side by side box and whisker plots for the HasDiabetes subgroups\n\nBMI_by_boxwplot &lt;- ggplot(diabetes_df, aes(HasDiabetes, BMI)) +\n  geom_boxplot(aes(group=HasDiabetes), fill=\"#CC0000\") +\n  scale_y_continuous(breaks = seq(0, 100, by = 10)) +\n  labs(title=\"Box Plot of BMI by HasDiabetes\")\n\nBMI_by_boxwplot\n\n\n\n\n\n\n\n\nconfirms that the Median, Mean, and IQR spreads for the “Yes” HasDiabetes group are all higher than those of the “No” group. Additionally, the box plot identifies that there is a shared oultier BMI range of 46-98.\nLooking back at the BMI histogram, the data in the BMI range of 12-14 and 46-50 appear to be inside of 3 standard deviations from the center. Because of this we determine how many BMI values are greater than 50 and how much of the data set those values make up.\n\nhighrange &lt;- sum(diabetes_df$BMI &gt; 50)\n\nprint(list(\"Number of BMI Oultiers\"=highrange))\n\n$`Number of BMI Oultiers`\n[1] 2175\n\nprint(list(\"BMI Outlier portion of data set\"=highrange/nrow(diabetes_df)))\n\n$`BMI Outlier portion of data set`\n[1] 0.008573794\n\n\nWe identified there are of 2175 observations that are outliers, which account for less than 1% of the data set. It would be reasonable to remove these observations from the data set before prediction model training. Analysis of BMI indicates that it appears to be a suitable variable for prediction modeling after removal of the outleirs. The next varaible we’re going to analyze is Smoker. Review of the variable summary shows that\n\nprint(list(\"Summary of Smoker\"=summary(diabetes_df$Smoker)))\n\n$`Summary of Smoker`\n     0      1 \n141257 112423 \n\n\nthe ratio of smokers to non-smokers in the study is approximately 14:11. This is distribution between the groups is fairly close to a 1:1 distribution. Any differences between the HasDiabetes groups will be due to interactions between the two variables. Reviewing the bar plot of Smoker with respect to HasDiabetes shows\n\nSmoker_by &lt;- diabetes_df |&gt;\n  group_by(HasDiabetes, Smoker) |&gt;\n  summarize(count = n())\n\n`summarise()` has grouped output by 'HasDiabetes'. You can override using the\n`.groups` argument.\n\nSmoker_plot &lt;- ggplot(Smoker_by, aes(HasDiabetes, count, fill=Smoker)) +\n  geom_bar(stat = \"identity\", position = position_dodge()) +\n  geom_text(aes(label = count), position = position_dodge(width=0.9), hjust=0.5) +\n  scale_y_continuous(labels = comma) +\n  labs(title=\"Bar Plot of Smoker by HasDiabetes\", x=\"Has Diabetes\", y= \"# of PTs\") +\n  coord_flip()\n\nSmoker_plot\n\n\n\n\n\n\n\n\nshows that the “No” HasDiabetes group has a “No” to “Yes” Smoker distribution of approximately 62:47 which is closer to a 1:1 distribution than a 2:1 distribution. The “Yes” HasDiabetes group has a “No” to “Yes” Smoker distribution of approximately 17:18 which also nears a 1:1 distribution. While the ratios shifts indicate that smokers have a higher likelihood of having diabetes than non smokers, neither Smoker group separates itself from the variable in both HasDiabetes categories. Smoker is not a suitable variable for inclusion in our prediction model.\nThe next variable we are going to analyze is Stroke. Review of the variable summary shows\n\nprint(list(\"Summary of Stroke\"=summary(diabetes_df$Stroke)))\n\n$`Summary of Stroke`\n     0      1 \n243388  10292 \n\n\nthat Stroke has a 24:1 “No” to “Yes” ratio. This suggests that any differences between the HasDiabetes groups may be heavily influenced by the number of observations in each group more than the interaction between the variables. Review of a bar plot for Stroke with respect to HasDiabetes shows\n\nStroke_by &lt;- diabetes_df |&gt;\n  group_by(HasDiabetes, Stroke) |&gt;\n  summarize(count = n())\n\n`summarise()` has grouped output by 'HasDiabetes'. You can override using the\n`.groups` argument.\n\nStroke_plot &lt;- ggplot(Stroke_by, aes(HasDiabetes, count, fill=Stroke)) +\n  geom_bar(stat = \"identity\", position = position_dodge()) +\n  geom_text(aes(label = count), position = position_dodge(width=0.9), vjust=-0.25) +\n  scale_y_continuous(labels = comma) +\n  labs(title=\"Bar Plot of Stroke by HasDiabetes\", x=\"Has Diabetes\", y= \"# of PTs\") \n\nStroke_plot\n\n\n\n\n\n\n\n\nthat the Stroke “No” group is prominent in both groups of HasDiabetes. The “No” HasDiabetes group has a “No to”Yes” Stroke ratio of approximately 211:7 which is close to 30:1. The “Yes” HasDiabetes group has a “No to”Yes” Stroke ratio of approximately 32:3 which is close to 11:1. While still favoring the “No” Stroke group, the reduction in ratios indicates that there is a relationship between Stroke and HasDiabetes. However, the relationship appears to be where someone who had a stroke is likely to also have diabetes, but not someone who has diabetes is likely to have had a stroke. Stroke does not appear to be suitable for inclusion in the prediction model.\nThe next variable we are going to analyze is HeartDisesaseorAttack. Summary information shows\n\nprint(list(\"Summary of HeartDiseaseorAttack\"=summary(diabetes_df$HeartDiseaseorAttack)))\n\n$`Summary of HeartDiseaseorAttack`\n     0      1 \n229787  23893 \n\n\nthat the ratio between the “No” and “Yes” HeartDiseaseorAttack groups is approximately 23:2 which is slightly larger than 11:1. Review of a bar plot for HeartDiseaseorAttack with respect to HasDiabetes shows\n\nHeartDiseaseorAttack_by &lt;- diabetes_df |&gt;\n  group_by(HasDiabetes, HeartDiseaseorAttack) |&gt;\n  summarize(count = n())\n\n`summarise()` has grouped output by 'HasDiabetes'. You can override using the\n`.groups` argument.\n\nHeartDiseaseorAttack_plot &lt;- ggplot(HeartDiseaseorAttack_by, aes(HasDiabetes, count, fill=HeartDiseaseorAttack)) +\n  geom_bar(stat = \"identity\", position = position_dodge()) +\n  geom_text(aes(label = count), position = position_dodge(width=0.9), hjust=0.5) +\n  scale_y_continuous(labels = comma) +\n  labs(title=\"Bar Plot of HeartDiseaseorAttack by HasDiabetes\", x=\"Has Diabetes\", y= \"# of PTs\") +\n  coord_flip()\n\nHeartDiseaseorAttack_plot\n\n\n\n\n\n\n\n\nshows that the “No” HeartDiseaseorAttack group is noticably larger than the “Yes” group for each category of HasDiabetes. The “No” HeartDisease group has a “No” to “Yes” HeartDiseaseorAttack ratio of approximately 10:1. The “Yes” HeartDisease group has a “No” to “Yes” HeartDiseaseorAttack ratio of 27:7 which nears 4:1. The ratio change between the HasDiabetes groups suggests that there is a relationship between the variables. However, this relationship appears to be one where someone having diabetes can be used to predict if they have heart disease or have experienced a heart attack, which is not what we’re trying to predict. HeartDiseaseorAttack does not appear to be suitable for inclusion in the prediction model.\nThe next variable we will summarize is PhysActivity. Review of the variable summary information shows\n\nprint(list(\"Summary of PhysicalActivity\"= summary(diabetes_df$PhysActivity)))\n\n$`Summary of PhysicalActivity`\n     0      1 \n 61760 191920 \n\n\nthe ratio of “No” to “Yes” responses is approximately 6:19 which is slightly less than 1:3. This suggests that differences between the HasDiabetes groups may be influenced by the number of “Yes” PhysActivity observations. Review of a bar plot of PhysActivity with respect to HasDiabetes shows\n\nPhysActivity_by &lt;- diabetes_df |&gt;\n  group_by(HasDiabetes, PhysActivity) |&gt;\n  summarize(count = n())\n\n`summarise()` has grouped output by 'HasDiabetes'. You can override using the\n`.groups` argument.\n\nPhysActivity_plot &lt;- ggplot(PhysActivity_by, aes(HasDiabetes, count, fill=PhysActivity)) +\n  geom_bar(stat = \"identity\", position = position_dodge()) +\n  geom_text(aes(label = count), position = position_dodge(width=0.9), vjust=-0.25) +\n  scale_y_continuous(labels = comma) +\n  labs(title=\"Bar Plot of PhysActivity by HasDiabetes\", x=\"Has Diabetes\", y= \"# of PTs\") \n\nPhysActivity_plot\n\n\n\n\n\n\n\n\nPhysActivity is greater in both HasDiabetes groups. The “No” HeartDisease group has a “No” to “Yes” PhysActivity ratio of approximately 5:17 which is slightly less than 1:3. The “Yes” HeartDisease group has a “No” to “Yes” PhysActivity ratio of approximately 13:22 which is slightly greater than 1:2. This change in ratios shows that there is a relationship between the variables. The relationship appears to be one where someone having diabetes can be used to predict if they participate in physical activity or not, which is not what we’re trying to predict. PhysActivity does not appear to be suitable for inclusion in the prediction model.\nThe next variable we’re going to summarize is ConsumesFruits. Review of the variable summary information shows\n\nprint(list(\"Summary of ConsumesFruits\"=summary(diabetes_df$ConsumesFruits)))\n\n$`Summary of ConsumesFruits`\n     0      1 \n 92782 160898 \n\n\nthat ConsumesFruits has a “No” to “Yes” ratio of approximately 9:16, which is slightly greater than a 1:2 distribution. Review of a bar graph of ConsumesFruits with respect to HasDiabetes shows\n\nConsumesFruits_by &lt;- diabetes_df |&gt;\n  group_by(HasDiabetes, ConsumesFruits) |&gt;\n  summarize(count = n())\n\n`summarise()` has grouped output by 'HasDiabetes'. You can override using the\n`.groups` argument.\n\nConsumesFruits_plot &lt;- ggplot(ConsumesFruits_by, aes(HasDiabetes, count, fill=ConsumesFruits)) +\n  geom_bar(stat = \"identity\", position = position_dodge()) +\n  geom_text(aes(label = count), position = position_dodge(width=0.9), hjust=0.5) +\n  scale_y_continuous(labels = comma) +\n  labs(title=\"Bar Plot of ConsumesFruits by HasDiabetes\", x=\"Has Diabetes\", y= \"# of PTs\") +\n  coord_flip()\n\nConsumesFruits_plot\n\n\n\n\n\n\n\n\nthat both groups of HasDiabetes have a greater number of “Yes” ConsumesFruits observations. The “No” HasDiabetes group has a “No” to “Yes” ConsumesFruits ratio of approximately 8:14 which is slightly greater than 1:2. The “Yes” HasDiabetes group has a “No” to “Yes” ConsumesFruits ratio of approximately 15:21 which is slightly greater than 2:3. This change in ratios shows that there is a relationship between the variables. However, the relationship appears to be one where someone having diabetes can be used to predict if they eat fruits or not, which is not what we’re tyring to predict. ConsumesFruits does not appear to be suitable for inclusion in the prediction model.\nThe next variabel we’re going to summarize is **ConsumesVeggies*. Review of the variable summary information shows\n\nprint(list(\"Summary of ConsumesVeggies\"=summary(diabetes_df$ConsumesVeggies)))\n\n$`Summary of ConsumesVeggies`\n     0      1 \n 47839 205841 \n\n\nthat the proporiton of “No” to “Yes” responses is approximately 5:21 which is slightly less than 1:4. Review of a bar plot of ConsumesVeggies with respect to HasDiabetes shows\n\nConsumesVeggies_by &lt;- diabetes_df |&gt;\n  group_by(HasDiabetes, ConsumesVeggies) |&gt;\n  summarize(count = n())\n\n`summarise()` has grouped output by 'HasDiabetes'. You can override using the\n`.groups` argument.\n\nConsumesVeggies_plot &lt;- ggplot(ConsumesVeggies_by, aes(HasDiabetes, count, fill=ConsumesVeggies)) +\n  geom_bar(stat = \"identity\", position = position_dodge()) +\n  geom_text(aes(label = count), position = position_dodge(width=0.9), vjust=-0.25) +\n  scale_y_continuous(labels = comma) +\n  labs(title=\"Bar Plot of ConsumesVeggies by HasDiabetes\", x=\"Has Diabetes\", y= \"# of PTs\") \n\nConsumesVeggies_plot\n\n\n\n\n\n\n\n\nthat the “Yes” ConsumesVeggies observations are substantially greater in both categories of HasDiabetes. The “No” HasDiabetes group has a “No” to “Yes” ConsumesVeggies ratio of approximately 2:9 which is slightly less than 1:4. The “Yes” HasDiabetes group has a “No” to “Yes” ConsumesVeggies ratio of approximately 1:3. The change in ratios between the HasDiabetes groups shows that there is a relationship between the variables. However, the relationship appears to be one where someone having diabetes can be used to predict if they eat vegetables or not, which is not what we’re trying to predict. ConsumesVeggies does not appear to be suitable for inclusion in the prediction model.\nThe next variable we’re going to summarize is HeavyAlcoholUse. Review of the variable summary information shows\n\nprint(list(\"Summary of HeavyAlcoholUse\"=summary(diabetes_df$HeavyAlcoholUse)))\n\n$`Summary of HeavyAlcoholUse`\n     0      1 \n239424  14256 \n\n\nshows that the ratio of “No” to “Yes” responses is approximately 24:1. This suggests that any differences between the HasDiabetes groups may be influenced by the number of observations. Reviewing the bar plot of HeavyAlcoholUse with respect to **HeartDisease* shows\n\nHeavyAlcoholUse_by &lt;- diabetes_df |&gt;\n  group_by(HasDiabetes, HeavyAlcoholUse) |&gt;\n  summarize(count = n())\n\n`summarise()` has grouped output by 'HasDiabetes'. You can override using the\n`.groups` argument.\n\nHeavyAlcoholUse_plot &lt;- ggplot(HeavyAlcoholUse_by, aes(HasDiabetes, count, fill=HeavyAlcoholUse)) +\n  geom_bar(stat = \"identity\", position = position_dodge()) +\n  geom_text(aes(label = count), position = position_dodge(width=0.9), hjust=0.5) +\n  scale_y_continuous(labels = comma) +\n  labs(title=\"Bar Plot of HeavyAlcoholUse by HasDiabetes\", x=\"Has Diabetes\", y= \"# of PTs\") +\n  coord_flip()\n\nHeavyAlcoholUse_plot\n\n\n\n\n\n\n\n\nthat the “No” HeavyAlcoholUse responses constitute the majority of observations in both HasDiabetes groups. The “No” HasDiabetes group has a “No” to “Yes” HeavyAlcoholUse ratio of approximately 205:13 which reduces close to 16:1. The “Yes” HasDiabetes group has a “No” to “Yes” HeavyAlcoholUse ratio of approximately 345:8 which reduces close to 43:1. The change in ratios shows that there is a relationship between the variables. However, the relationship appears to be one where someone having diabetes can be used to predict if they consume alcohol heavily, which is not what we’re trying to predict. HeavyAlcoholUse does not appear to be suitable for inclusion in the prediction model.\nThe next variable we’re going to summarize is HasHealthcare. Review of the variable summary information\n\nprint(list(\"Summary of HasHealthcare\"=summary(diabetes_df$HasHealthcare)))\n\n$`Summary of HasHealthcare`\n     0      1 \n 12417 241263 \n\n\nshows that the ratio of “No” to “Yes” observations is approximately 12:241 which is close to a 1:20 ratio. This is suggestive that any differences between the HasDiabetes categories may be heavily influenced by the number of responses in each. Reviewing the bar chart of HasHealthcare with respect to HasDiabetes shows\n\nHasHealthcare_by &lt;- diabetes_df |&gt;\n  group_by(HasDiabetes, HasHealthcare) |&gt;\n  summarize(count = n())\n\n`summarise()` has grouped output by 'HasDiabetes'. You can override using the\n`.groups` argument.\n\nHasHealthcare_plot &lt;- ggplot(HasHealthcare_by, aes(HasDiabetes, count, fill=HasHealthcare)) +\n  geom_bar(stat = \"identity\", position = position_dodge()) +\n  geom_text(aes(label = count), position = position_dodge(width=0.9), vjust=-0.25) +\n  scale_y_continuous(labels = comma) +\n  labs(title=\"Bar Plot of HasHealthcare by HasDiabetes\", x=\"Has Diabetes\", y= \"# of PTs\") \n\nHasHealthcare_plot\n\n\n\n\n\n\n\n\nthe “Yes” HasHealthcare observations are substantially higher than the “No” responses for both categories of **HasDiabetes*. The “No” HasDiabetes group has a “No” to “Yes” HasHealthcare ratio of approximately 11:207 which reduces close to 1:19. The “Yes” HasDiabetes group has a “No” to “Yes” HasHealthcare ratio of approximately 14:339 which reduces close to 1:24. The ratios in both groups of HasDiabetes do not differ much from the overall HasHealthcare variable ratio of 1:20. HasHealthcare does not appear to be suitable for inclusion in the prediction model.\nThe next variable we’re going to summarize is ExpensiveTreatment. Review of the variable summary information\n\nprint(list(\"Summary of ExpensiveTreatment\"=summary(diabetes_df$ExpensiveTreatment)))\n\n$`Summary of ExpensiveTreatment`\n     0      1 \n232326  21354 \n\n\nthat the ration of “No” to “Yes” observations is approximately 232:21 which reduces near 11:1. This is suggestive that any differences between the HasDiabetes categories may be heavily influenced by the number of repsonses in each. Reviwing the bar chart of ExpensiveTreatment with respect to HasDiabetes shows\n\nExpensiveTreatment_by &lt;- diabetes_df |&gt;\n  group_by(HasDiabetes, ExpensiveTreatment) |&gt;\n  summarize(count = n())\n\n`summarise()` has grouped output by 'HasDiabetes'. You can override using the\n`.groups` argument.\n\nExpensiveTreatment_plot &lt;- ggplot(ExpensiveTreatment_by, aes(HasDiabetes, count, fill=ExpensiveTreatment)) +\n  geom_bar(stat = \"identity\", position = position_dodge()) +\n  geom_text(aes(label = count), position = position_dodge(width=0.9), hjust=0.5) +\n  scale_y_continuous(labels = comma) +\n  labs(title=\"Bar Plot of ExpensiveTreatment by HasDiabetes\", x=\"Has Diabetes\", y= \"# of PTs\") +\n  coord_flip()\n\nExpensiveTreatment_plot\n\n\n\n\n\n\n\n\nthe “No” observations are substantially greater than the “Yes” responses for both categories of HasDiabetes. The “No” HasDiabetes group has a “No” to “Yes” ExpensiveTreatment ratio of approximately 201:17 which reduces close to 12:1. The “Yes” HasDiabetes group has a “No” to “Yes” ExpensiveTreatment ratio of approximately 316:37 which reduces close to 9:1. There appears to be a relationship between the variables where someone with diabetes has a greater likelihood of not seeking treatment due to the cost, but that is not what we’re trying to predict. ExpensiveTreatment does not appear to be suitbale for inclusion in the prediciton model.\nThe next variable we’re going to summarize is GeneralHealth. Review of the variable summary information\n\nprint(list(\"Summary of GeneralHealth\"=summary(diabetes_df$GeneralHealth)))\n\n$`Summary of GeneralHealth`\n    1     2     3     4     5 \n45299 89084 75646 31570 12081 \n\n\nshows that the majority of patients reported being in “Excellent” to “Good” health. Reviewing the bar chart of GeneralHealth with respect to HasDiabetes shows\n\nGeneralHealth_by &lt;- diabetes_df |&gt;\n  group_by(HasDiabetes, GeneralHealth) |&gt;\n  summarize(count = n())\n\n`summarise()` has grouped output by 'HasDiabetes'. You can override using the\n`.groups` argument.\n\nGeneralHealth_plot &lt;- ggplot(GeneralHealth_by, aes(HasDiabetes, count, fill=GeneralHealth)) +\n  geom_bar(stat = \"identity\", position = position_dodge()) +\n  geom_text(aes(label = count), position = position_dodge(width=0.9), vjust=-0.25) +\n  scale_y_continuous(labels = comma) +\n  labs(title=\"Bar Plot of GeneralHealth by HasDiabetes\", x=\"Has Diabetes\", y= \"# of PTs\") \n\nGeneralHealth_plot\n\n\n\n\n\n\n\n\nthat there is a shift in the reporting tendencies between the HasDiabetes categories. The “No” HasDiabetes group has a central tendency of “Very Good” followed by “Good” GeneralHealth responses while the “Yes” HasDiabetes group has a central tendency of “Good” followed by “Fair” GeneralHealth responses\n\nNoDiabetes_high_three &lt;- sum(GeneralHealth_by$count[1:3])/sum(GeneralHealth_by$count[1:5])\nNoDiabetes_fourth &lt;- GeneralHealth_by$count[4]/sum(GeneralHealth_by$count[1:5])\n\nYesDiabetes_high_three &lt;- sum(GeneralHealth_by$count[7:9])/sum(GeneralHealth_by$count[6:10]) \nYesDiabetes_fourth &lt;- GeneralHealth_by$count[10]/sum(GeneralHealth_by$count[6:10])\n\nprint(list(\"GeneralHealth 1 through 3, HasDiabetes in 'No'\"=NoDiabetes_high_three, \"GeneralHealth 4, HasDiabetes in 'No'\"=NoDiabetes_fourth, \"GeneralHealth 2 through 4, HasDiabetes in 'Yes'\"=YesDiabetes_high_three, \"GeneralHealth 5, HasDiabetes in 'Yes'\"=NoDiabetes_fourth))\n\n$`GeneralHealth 1 through 3, HasDiabetes in 'No'`\n[1] 0.8658798\n\n$`GeneralHealth 4, HasDiabetes in 'No'`\n[1] 0.09975542\n\n$`GeneralHealth 2 through 4, HasDiabetes in 'Yes'`\n[1] 0.8382278\n\n$`GeneralHealth 5, HasDiabetes in 'Yes'`\n[1] 0.09975542\n\n\nReview of the GeneralHealth response proportions in the “No” HasDiabetes group shows that over 86.59% of the observations reported having a GeneralHealth status of “Good” or better for the three highest responses with the 4th highest response of “Fair” accounting for another 9.98% of group responses. Review of the GeneralHealth response proportions in the “Yes” HasDiabetes shows that over 83.82% of the observations reported having a GeneralHealth status of “Very Good” to “Fair” for the three highest responses with the fourth highest response of “Poor” accounting for another 9.98% of group responses. The shift in GeneralHealth tendency between the HasDiabetes groups suggests that there is a relationship between the variables. GeneralHealth appears to be a suitable variable for prediciton modeling.\nThe next variable we’re going to summarize is BadMentalHealth. Review of the variable summary information\n\nprint(list(\"Summary of BadMentalHealth\"=summary(diabetes_df$BadMentalHealth)))\n\n$`Summary of BadMentalHealth`\n   Min. 1st Qu.  Median    Mean 3rd Qu.    Max. \n  0.000   0.000   0.000   3.185   2.000  30.000 \n\n\nshows that there is a tendency for the PTs to report that their mental health was not good for zero days.\nReview of a histogram of the variable along with histograms of MentalHealth with respect to HasDiabetes shows\n\nBadMentalHealth_histogram &lt;- ggplot(diabetes_df, aes(BadMentalHealth)) +\n  geom_histogram(aes(y=..density..), binwidth=1, fill=\"#CC0000\", color=\"lightgray\") +\n  scale_x_continuous(breaks = seq(0, 30, by = 5)) +\n  scale_y_continuous(breaks = seq(0, 1, by = 0.05)) +\n  labs(title=\"Histogram of BadMentalHealth\", x=\"# of Days Mental Health Not Good\", y=\"Density (# of PTs)\")\n\nBadMentalHealth_histogram\n\n\n\n\n\n\n\nBadMentalHealth_by_histplot &lt;- ggplot(diabetes_df, aes(BadMentalHealth)) +\n  geom_histogram(aes(y=..density..), binwidth=1, fill=\"#CC0000\", color=\"lightgray\") +\n  labs(title=\"Histogram of BadMentalHealth by HasDiabetes\", y=\"Density (# of PTs)\") +\n  scale_x_continuous(breaks = seq(0, 30, by = 5)) +\n  scale_y_continuous(breaks = seq(0, 1, by = 0.05)) +\n  facet_grid(~HasDiabetes)\n\nBadMentalHealth_by_histplot\n\n\n\n\n\n\n\n\nthat the majority of the observations in both categories of HasDiabetes follow the similar trend where the majority of non-zero values in BadMentalHealth are in the range of 1-10 days. After remvoing the zero values for analysis, we compared the proportions of 10-day BadMentalHealth ranges between the HasDiabetes groups.\n\nBadMentalHealth_by_nozero &lt;- diabetes_df |&gt;\n  group_by(HasDiabetes, BadMentalHealth) |&gt;\n  filter(BadMentalHealth &gt;= 1) |&gt;\n  summarize(count=n())\n\n`summarise()` has grouped output by 'HasDiabetes'. You can override using the\n`.groups` argument.\n\nprint(BadMentalHealth_by_nozero, n=60)\n\n# A tibble: 60 × 3\n# Groups:   HasDiabetes [2]\n   HasDiabetes BadMentalHealth count\n   &lt;fct&gt;                 &lt;dbl&gt; &lt;int&gt;\n 1 0                         1  7726\n 2 0                         2 11546\n 3 0                         3  6457\n 4 0                         4  3300\n 5 0                         5  7807\n 6 0                         6   824\n 7 0                         7  2695\n 8 0                         8   529\n 9 0                         9    78\n10 0                        10  5309\n11 0                        11    38\n12 0                        12   331\n13 0                        13    33\n14 0                        14   969\n15 0                        15  4482\n16 0                        16    74\n17 0                        17    43\n18 0                        18    77\n19 0                        19    12\n20 0                        20  2701\n21 0                        21   179\n22 0                        22    52\n23 0                        23    30\n24 0                        24    27\n25 0                        25   915\n26 0                        26    38\n27 0                        27    67\n28 0                        28   270\n29 0                        29   128\n30 0                        30  9320\n31 1                         1   812\n32 1                         2  1508\n33 1                         3   924\n34 1                         4   489\n35 1                         5  1223\n36 1                         6   164\n37 1                         7   405\n38 1                         8   110\n39 1                         9    13\n40 1                        10  1064\n41 1                        11     3\n42 1                        12    67\n43 1                        13     8\n44 1                        14   198\n45 1                        15  1023\n46 1                        16    14\n47 1                        17    11\n48 1                        18    20\n49 1                        19     4\n50 1                        20   663\n51 1                        21    48\n52 1                        22    11\n53 1                        23     8\n54 1                        24     6\n55 1                        25   273\n56 1                        26     7\n57 1                        27    12\n58 1                        28    57\n59 1                        29    30\n60 1                        30  2768\n\nHasDiabetesNo_first_ten &lt;- list(\"HasDiabetesNo, BadMentalHealth, 1-10 days proprotion of data\" =sum(BadMentalHealth_by_nozero$count[1:10])/sum(BadMentalHealth_by_nozero$count[1:30]))\n\nHasDiabetesNo_middle_ten &lt;- list(\"HasDiabetesNo, BadMentalHealth, 11-20 days proprotion of data\" =sum(BadMentalHealth_by_nozero$count[11:20])/sum(BadMentalHealth_by_nozero$count[1:30]))\n\nHasDiabetesNo_last_ten &lt;- list(\"HasDiabetesNo, BadMentalHealth, 21-30 days proprotion of data\" =sum(BadMentalHealth_by_nozero$count[21:30])/sum(BadMentalHealth_by_nozero$count[1:30]))\n\nHasDiabetesYes_first_ten &lt;- list(\"HasDiabetesYes, BadMentalHealth, 1-10 days proprotion of data\"=sum(BadMentalHealth_by_nozero$count[31:40])/sum(BadMentalHealth_by_nozero$count[31:60]))\n\nHasDiabetesYes_middle_ten &lt;- list(\"HasDiabetesYes, BadMentalHealth, 11-20 days proprotion of data\"=sum(BadMentalHealth_by_nozero$count[41:50])/sum(BadMentalHealth_by_nozero$count[31:60]))\n\nHasDiabetesYes_last_ten &lt;- list(\"HasDiabetesYes, BadMentalHealth, 20-30 days proprotion of data\"=sum(BadMentalHealth_by_nozero$count[51:60])/sum(BadMentalHealth_by_nozero$count[31:60]))\n\nprint(c(HasDiabetesNo_first_ten, HasDiabetesYes_first_ten, HasDiabetesNo_middle_ten, HasDiabetesYes_middle_ten, HasDiabetesNo_last_ten, HasDiabetesYes_last_ten))\n\n$`HasDiabetesNo, BadMentalHealth, 1-10 days proprotion of data`\n[1] 0.7004708\n\n$`HasDiabetesYes, BadMentalHealth, 1-10 days proprotion of data`\n[1] 0.5620028\n\n$`HasDiabetesNo, BadMentalHealth, 11-20 days proprotion of data`\n[1] 0.1326127\n\n$`HasDiabetesYes, BadMentalHealth, 11-20 days proprotion of data`\n[1] 0.1683832\n\n$`HasDiabetesNo, BadMentalHealth, 21-30 days proprotion of data`\n[1] 0.1669165\n\n$`HasDiabetesYes, BadMentalHealth, 20-30 days proprotion of data`\n[1] 0.269614\n\n\nThe comparisons showed that the “No” HasDiabetes group had a 70% of their BadMentalHealth responses in the 1-10 day range while the “Yes” HasDiabetes group only had a 56.2% of their BadMentalHealth responses in the same range. Likewise, the “Yes” HasDiabetes group had higher percentages of responses in both the 11-20 day and 21-30 day BadMentalHealth ranges than the “No” HasDiabetes group. The change in “0” response density between the HasDiabetes groups appears to have shifted to longer periods of PTs with diabetes experiencing mental health that is not good. This shows that there is a relationship between the variables. BadMentalHealth appears to be suitable for prediction modeling.\nThe next variable we’re going to summarize is BadPhysicalHealth. Review of the variable summary information\n\nprint(list(\"Summary of PhysicalHealth\"=summary(diabetes_df$BadPhysicalHealth)))\n\n$`Summary of PhysicalHealth`\n   Min. 1st Qu.  Median    Mean 3rd Qu.    Max. \n  0.000   0.000   0.000   4.242   3.000  30.000 \n\n\nshows that like BadMentalHealth, the vast majority of BadPhysicalHealth responses provided were “0”. Reviewing a density plot histogram of BadPhysicalHealth along with histogram plots of BadPhysicalHealth with respect to HasDiabetes show\n\nBadPhysicalHealth_histogram &lt;- ggplot(diabetes_df, aes(BadPhysicalHealth)) +\n  geom_histogram(aes(y=..density..), binwidth=1, fill=\"#CC0000\", color=\"lightgray\") +\n  scale_x_continuous(breaks = seq(0, 30, by = 5)) +\n  scale_y_continuous(breaks = seq(0, 1, by = 0.05)) +\n  labs(title=\"Histogram of BadPhysicalHealth\", x=\"# of Days Mental Health Not Good\", y=\"Density (# of PTs)\")\n\nBadPhysicalHealth_histogram\n\n\n\n\n\n\n\nBadPhysicalHealth_by_histplot &lt;- ggplot(diabetes_df, aes(BadPhysicalHealth)) +\n  geom_histogram(aes(y=..density..), binwidth=1, fill=\"#CC0000\", color=\"lightgray\") +\n  labs(title=\"Histogram of BadPhysicalHealth by HasDiabetes\", y=\"Density (# of PTs)\") +\n  scale_x_continuous(breaks = seq(0, 30, by = 5)) +\n  scale_y_continuous(breaks = seq(0, 30, by = 0.05)) +\n  facet_grid(~HasDiabetes)\n\nBadPhysicalHealth_by_histplot\n\n\n\n\n\n\n\n\nthat like with BadMentalHealth, the density of the BadPhysicalHealth “0” response changes between the HasDiabetes groups. The general trend is that when compared to the “No” HasDiabetes group the “Yes” HasDiabetes densities in the 0-7 day range are lower and then overall higher among the remaining groups. Comparing the proportions of the 0-7day ranges to the 8-30 day ranges\n\nBadPhysicalHealth_by &lt;- diabetes_df |&gt;\n  group_by(HasDiabetes, BadMentalHealth) |&gt;\n  summarize(count=n())\n\n`summarise()` has grouped output by 'HasDiabetes'. You can override using the\n`.groups` argument.\n\nBadPhysHlth_DiabetesNo_firstSeven &lt;- list(\"BadPhysHealth 1-7 Days, Diabetes in 'No'\" = sum(BadPhysicalHealth_by$count[1:8])/sum(BadPhysicalHealth_by$count[1:31]))\n\nBadPhysHlth_DiabetesNo_lastTwentyThree &lt;- list(\"BadPhysHealth 8-30 Days, Diabetes in 'No'\" = sum(BadPhysicalHealth_by$count[9:31])/sum(BadPhysicalHealth_by$count[1:31]))\n\nBadPhysHlth_DiabetesYes_firstSeven &lt;- list(\"BadPhysHealth 1-7 Days, Diabetes in 'Yes'\" = sum(BadPhysicalHealth_by$count[32:39])/sum(BadPhysicalHealth_by$count[32:62]))\n\nBadPhysHlth_DiabetesYes_lastTwentyThree &lt;- list(\"BadPhysHealth 8-30 Days, Diabetes in 'Yes'\" = sum(BadPhysicalHealth_by$count[40:62])/sum(BadPhysicalHealth_by$count[32:62]))\n\nprint(c(BadPhysHlth_DiabetesNo_firstSeven, BadPhysHlth_DiabetesYes_firstSeven, BadPhysHlth_DiabetesNo_lastTwentyThree, BadPhysHlth_DiabetesYes_lastTwentyThree))\n\n$`BadPhysHealth 1-7 Days, Diabetes in 'No'`\n[1] 0.8822813\n\n$`BadPhysHealth 1-7 Days, Diabetes in 'Yes'`\n[1] 0.8184236\n\n$`BadPhysHealth 8-30 Days, Diabetes in 'No'`\n[1] 0.1177187\n\n$`BadPhysHealth 8-30 Days, Diabetes in 'Yes'`\n[1] 0.1815764\n\n\nconfirms that the visual assessments are correct. The “No” HasDiabetes group is 6.4 percentage points higher in the BadPhysicalHealth 0-7 day range compared to the “Yes” HasDiabetes group. This change in HasDiabetes suggests that there is a relationship between the variables. **BadPhysicalHealth* appears to be suitable for prediction modeling.\nThe next variable we’re going to summarize is DifficultyWalking. Reviewing the variable summary\n\nprint(list(\"Summary of DifficultyWalking\"=summary(diabetes_df$DifficultyWalking)))\n\n$`Summary of DifficultyWalking`\n     0      1 \n211005  42675 \n\n\nshows that the majority of PTs reported “No” at a ratio of approximately 211:43, which reduces to slightly less than 5:1. This suggests that any differences in the HasDiabetes groups will be highly influenced by the number of PTs in each. Reviewing the bar plot of DifficultyWalking with respect to HasDiabetes shows\n\nDifficultyWalking_by &lt;- diabetes_df |&gt;\n  group_by(HasDiabetes, DifficultyWalking) |&gt;\n  summarize(count = n())\n\n`summarise()` has grouped output by 'HasDiabetes'. You can override using the\n`.groups` argument.\n\nDifficultyWalking_plot &lt;- ggplot(DifficultyWalking_by, aes(HasDiabetes, count, fill=DifficultyWalking)) +\n  geom_bar(stat = \"identity\", position = position_dodge()) +\n  geom_text(aes(label = count), position = position_dodge(width=0.9), hjust=0.5) +\n  scale_y_continuous(labels = comma) +\n  labs(title=\"Bar Plot of DifficultyWalking by HasDiabetes\", x=\"Has Diabetes\", y= \"# of PTs\") +\n  coord_flip()\n\nDifficultyWalking_plot\n\n\n\n\n\n\n\n\nthat the majority of responses in both HasDiabetes groups fall under the “No” DifficultyWalking group. The observations in the “No” HasDiabetes category have a “No” to “Yes” DifficultyWalking ratio of approximately 188:30 which simplifies down to a ratio slightly greater than 6:1. The observations in the “Yes” HasDiabetes category have a “No” to “Yes” DifficultyWalking ratio of approximately 222:131 which simplifies down to closer to 2:1 than 1:1. The change in ratios suggests that there is a relationship between the variabels. However, the relationship appears to be one where someone having diabetes or not can help predict if they’ll have difficulty walking, but that is not what we’re trying to predict. DifficultyWalking does not appear to be a suitable variable for our prediction model.\nThe next variable we’re going to summarize is Sex. Reviewing the variable summary\n\nprint(list(\"Summary of Sex\"=summary(diabetes_df$Sex)))\n\n$`Summary of Sex`\n     0      1 \n141974 111706 \n\n\nshows that the distribution between the categories is almost uniform at a female to male ratio of approximately 142:111 which simplifies to a ratio slightly greater than 1:1. Reviewing the bar plot of Sex with respect to HasDiabetes shows\n\nSex_by &lt;- diabetes_df |&gt;\n  group_by(HasDiabetes, Sex) |&gt;\n  summarize(count = n())\n\n`summarise()` has grouped output by 'HasDiabetes'. You can override using the\n`.groups` argument.\n\nSex_plot &lt;- ggplot(Sex_by, aes(HasDiabetes, count, fill=Sex)) +\n  geom_bar(stat = \"identity\", position = position_dodge()) +\n  geom_text(aes(label = count), position = position_dodge(width=0.9), vjust=-0.25) +\n  scale_y_continuous(labels = comma) +\n  labs(title=\"Bar Plot of Sex by HasDiabetes\", x=\"Has Diabetes\", y= \"# of PTs\") \n\nSex_plot\n\n\n\n\n\n\n\n\nthat the number of females is greater in both HasDiabetes groups. The observations in the “No” HasDiabetes category have a “No” to “Yes” Sex ratio of approximately 124:95 which simplifies down to a ratio of slightly greater than 1:1. The observations in the “Yes” HasDiabetes category have a “No” to “Yes” Sex ratio of approximately 184:169 which also simplifies down to a ratio slightly greater than 1:1. The difference between the groups is minimal which suggests there is not a relationship between the variables. Sex does not appear suitable for our prediciton model.\nThe next variable we’re going to summarize is Age. Review of the variable summary\n\nprint(list(\"Summary of Age\"=summary(diabetes_df$Age)))\n\n$`Summary of Age`\n    1     2     3     4     5     6     7     8     9    10    11    12    13 \n 5700  7598 11123 13823 16157 19819 26314 30832 33244 32194 23533 15980 17363 \n\n\nshows that there is a trend where the number of responses increase in each category until group 9 (60-64), where they then decrease as from category 10 to 12 with group 13 being slightly higher than group 12. Reviewing histograms of Age with respect to HasDiabetes shows\n\nAge_by &lt;- diabetes_df |&gt;\n  group_by(HasDiabetes, Age) |&gt;\n  summarize(count = n())\n\n`summarise()` has grouped output by 'HasDiabetes'. You can override using the\n`.groups` argument.\n\nAge_plot &lt;- ggplot(Age_by, aes(HasDiabetes, count, fill=Age)) +\n  geom_bar(stat = \"identity\", position = position_dodge2()) +\n  geom_text(aes(label = count), position = position_dodge(width=0.9), vjust=-0.25, size=3) +\n  scale_y_continuous(labels = comma) +\n  labs(title=\"Bar Plot of Age by HasDiabetes\", x=\"Has Diabetes\", y= \"# of PTs\")\n\nAge_plot\n\n\n\n\n\n\n\n\nthat there a shift in distribution between the HasDiabetes groups. The “No” HasDiabetes group has central tendency around resonse “9” while the “Yes” HasDiabetes group has a central tendency around response “10”. Review of a summary table of the proportions between the HasDiabetes categories by groups shows\n\nAgeGrp &lt;- Age_by$Age[1:13]\n\nproportionNo &lt;- proportions(Age_by$count[1:13])\n\nproporitonYes &lt;-proportions(Age_by$count[14:26])\n\nAge_Diabetes &lt;- data.frame(AgeGrp, proportionNo, proporitonYes)\n\nAge_Diabetes &lt;- as_tibble(Age_Diabetes)\n\nprint(list(\"Summary Table of Age Proportions\"=Age_Diabetes))\n\n$`Summary Table of Age Proportions`\n# A tibble: 13 × 3\n   AgeGrp proportionNo proporitonYes\n   &lt;fct&gt;         &lt;dbl&gt;         &lt;dbl&gt;\n 1 1            0.0257       0.00221\n 2 2            0.0342       0.00396\n 3 3            0.0495       0.00888\n 4 4            0.0604       0.0177 \n 5 5            0.0692       0.0297 \n 6 6            0.0828       0.0493 \n 7 7            0.106        0.0874 \n 8 8            0.122        0.121  \n 9 9            0.126        0.162  \n10 10           0.117        0.186  \n11 11           0.0842       0.145  \n12 12           0.0576       0.0963 \n13 13           0.0648       0.0908 \n\nproportionNo_largestThree &lt;- sum(Age_Diabetes$proportionNo[8:10])\n\nproportionYes_largestThree &lt;- sum(Age_Diabetes$proporitonYes[9:11])\n\nprint(list(\"Cummulative Proportion of 3 largest Age groups, HasDiabetes - No\"=proportionNo_largestThree, \"Cummulative Proportion of 3 largest Age groups, HasDiabetes - Yes\"=proportionYes_largestThree))\n\n$`Cummulative Proportion of 3 largest Age groups, HasDiabetes - No`\n[1] 0.3651103\n\n$`Cummulative Proportion of 3 largest Age groups, HasDiabetes - Yes`\n[1] 0.4931817\n\n\nthat not only did the distributions shift between the age groups, but the highest three Age categories (8-10) in the “No” HasDiabetes group account for 36.51% of the group data while the highest three Age categories (9-11) in the “Yes” HasDiabetes category account for 49.32% of the group data. These shifts in proportions suggest that there is a relationship between the variables. Age appears to be suitable for prediction modeling.\nThe next variabel we’re going to summarize is Education. Review of the variable summary information\n\nprint(list(\"Summary of Education\"=summary(diabetes_df$Education)))\n\n$`Summary of Education`\n     1      2      3      4      5      6 \n   174   4043   9478  62750  69910 107325 \n\n\nshows that the responses increased in each category with the majority of observations belonging to category 6 (College 4yrs or more (College graduate)). Reviewing the bar plot of Education with respect to HasDiabetes shows\n\nEducation_by &lt;- diabetes_df |&gt;\n  group_by(HasDiabetes, Education) |&gt;\n  summarize(count = n())\n\n`summarise()` has grouped output by 'HasDiabetes'. You can override using the\n`.groups` argument.\n\nEducation_plot &lt;- ggplot(Education_by, aes(HasDiabetes, count, fill=Education)) +\n  geom_bar(stat = \"identity\", position = position_dodge2()) +\n  geom_text(aes(label = count), position = position_dodge(width=0.9), hjust=0.5) +\n  scale_y_continuous(labels = comma) +\n  labs(title=\"Bar Plot of Education by HasDiabetes\", x=\"Has Diabetes\", y= \"# of PTs\") +\n  coord_flip()\n\nEducation_plot\n\n\n\n\n\n\n\n\nshows that there is a definite change in the ratios of the Education gropus between the HasDiabetes groups. The “No” HasDiabetes group follows the same trend as the overall data while the “Yes” HasDiabetes group has a fairly uniform distribution between categories 4, 5, and 6. There does appear to be a relationship between the variables where we could determine there was a high probability that someone with diabetes has a high probability of having a high school diploma, GED, or higher education but the data does not lend itself to determining if a given education level can be used to predict if someone has diabetes. Education does not appear to be suitable for prediciton analysis.\nThe last variable that we’re going to summarize is Income. Review of the variable summary information\n\nprint(list(\"Summary of Income\"=summary(diabetes_df$Income)))\n\n$`Summary of Income`\n    1     2     3     4     5     6     7     8 \n 9811 11783 15994 20135 25883 36470 43219 90385 \n\n\nshows that the number of responses increase as the categories increase, with the largest group earning $75K per year or more. Reviewing a bar plot of Income with respect to HasDiabetes shows\n\nIncome_by &lt;- diabetes_df |&gt;\n  group_by(HasDiabetes, Income) |&gt;\n  summarize(count = n())\n\n`summarise()` has grouped output by 'HasDiabetes'. You can override using the\n`.groups` argument.\n\nIncome_plot &lt;- ggplot(Income_by, aes(HasDiabetes, count, fill=Income)) +\n  geom_bar(stat = \"identity\", position = position_dodge2()) +\n  geom_text(aes(label = count), position = position_dodge(width=0.9), vjust=-0.25, size=3) +\n  scale_y_continuous(labels = comma) +\n  labs(title=\"Bar Plot of Income by HasDiabetes\", x=\"Has Diabetes\", y= \"# of PTs\")\n\nIncome_plot\n\n\n\n\n\n\n\n\nthat there is a shift in proportions of Income group categories between the HasDiabetes groups. The Income groups with “No” HasDiabetes responses appear to have a quadratic relationship with a large positive slope between groups 7 and 8. The Income groups with “Yes” HasDiabetes responses appear to have a linear relationship with a small positive slope. There appears to be a relationship between the variables where a person with diabetes has a greater probability of earning less than $75K pe year, but that is not what we’re trying ot predcit. Income does not appear to be suitable for prediction modeling.\nNext, we will use the above information to generate prediction models here"
  },
  {
    "objectID": "FinalProjectEDA.html#diabetes-health-indicators---eda",
    "href": "FinalProjectEDA.html#diabetes-health-indicators---eda",
    "title": "Final Project",
    "section": "",
    "text": "Briefly describe the data and variables we have to work with (only the ones that will be investigated/used in analysis)\nDescribe the purpose of the EDA and ultimate goal of modeling\n\n\n\n\n\nlibrary(dplyr)\nlibrary(ggplot2)\nlibrary(scales)\n\n\nUse relative path to import the data\n\n\n# Use a relative path to import the data. Convert variables to factors with \n# meaningful names\n\ndiabetes_df &lt;- read.csv(\"diabetes_binary_health_indicators_BRFSS2015.csv\")\n\ndiabetes_df &lt;- as_tibble(diabetes_df)\n\ndiabetes_df\n\n# A tibble: 253,680 × 22\n   Diabetes_binary HighBP HighChol CholCheck   BMI Smoker Stroke\n             &lt;dbl&gt;  &lt;dbl&gt;    &lt;dbl&gt;     &lt;dbl&gt; &lt;dbl&gt;  &lt;dbl&gt;  &lt;dbl&gt;\n 1               0      1        1         1    40      1      0\n 2               0      0        0         0    25      1      0\n 3               0      1        1         1    28      0      0\n 4               0      1        0         1    27      0      0\n 5               0      1        1         1    24      0      0\n 6               0      1        1         1    25      1      0\n 7               0      1        0         1    30      1      0\n 8               0      1        1         1    25      1      0\n 9               1      1        1         1    30      1      0\n10               0      0        0         1    24      0      0\n# ℹ 253,670 more rows\n# ℹ 15 more variables: HeartDiseaseorAttack &lt;dbl&gt;, PhysActivity &lt;dbl&gt;,\n#   Fruits &lt;dbl&gt;, Veggies &lt;dbl&gt;, HvyAlcoholConsump &lt;dbl&gt;, AnyHealthcare &lt;dbl&gt;,\n#   NoDocbcCost &lt;dbl&gt;, GenHlth &lt;dbl&gt;, MentHlth &lt;dbl&gt;, PhysHlth &lt;dbl&gt;,\n#   DiffWalk &lt;dbl&gt;, Sex &lt;dbl&gt;, Age &lt;dbl&gt;, Education &lt;dbl&gt;, Income &lt;dbl&gt;\n\n\nCheck for missingness\n\nlist(\"Number of missing values in data set\" = sum(is.na(diabetes_df)))\n\n$`Number of missing values in data set`\n[1] 0\n\n\n\ndiabetes_df &lt;- diabetes_df |&gt;\n  rename(\"HasDiabetes\" = Diabetes_binary, \n         \"HighCholesterol\" = HighChol, \n         \"CholesterolChecked\" = CholCheck, \n         \"ConsumesFruits\" = Fruits, \n         \"ConsumesVeggies\" = Veggies, \n         \"HeavyAlcoholUse\" = HvyAlcoholConsump,\n         \"HasHealthcare\" = AnyHealthcare,\n         \"ExpensiveTreatment\" = NoDocbcCost,\n         \"GeneralHealth\" = GenHlth,\n         \"BadMentalHealth\" = MentHlth,\n         \"BadPhysicalHealth\" = PhysHlth,\n         \"DifficultyWalking\" = DiffWalk) |&gt;\n  mutate(across(c(1:4, 6:15, 18:22), as.factor))\n\nstr(diabetes_df)\n\ntibble [253,680 × 22] (S3: tbl_df/tbl/data.frame)\n $ HasDiabetes         : Factor w/ 2 levels \"0\",\"1\": 1 1 1 1 1 1 1 1 2 1 ...\n $ HighBP              : Factor w/ 2 levels \"0\",\"1\": 2 1 2 2 2 2 2 2 2 1 ...\n $ HighCholesterol     : Factor w/ 2 levels \"0\",\"1\": 2 1 2 1 2 2 1 2 2 1 ...\n $ CholesterolChecked  : Factor w/ 2 levels \"0\",\"1\": 2 1 2 2 2 2 2 2 2 2 ...\n $ BMI                 : num [1:253680] 40 25 28 27 24 25 30 25 30 24 ...\n $ Smoker              : Factor w/ 2 levels \"0\",\"1\": 2 2 1 1 1 2 2 2 2 1 ...\n $ Stroke              : Factor w/ 2 levels \"0\",\"1\": 1 1 1 1 1 1 1 1 1 1 ...\n $ HeartDiseaseorAttack: Factor w/ 2 levels \"0\",\"1\": 1 1 1 1 1 1 1 1 2 1 ...\n $ PhysActivity        : Factor w/ 2 levels \"0\",\"1\": 1 2 1 2 2 2 1 2 1 1 ...\n $ ConsumesFruits      : Factor w/ 2 levels \"0\",\"1\": 1 1 2 2 2 2 1 1 2 1 ...\n $ ConsumesVeggies     : Factor w/ 2 levels \"0\",\"1\": 2 1 1 2 2 2 1 2 2 2 ...\n $ HeavyAlcoholUse     : Factor w/ 2 levels \"0\",\"1\": 1 1 1 1 1 1 1 1 1 1 ...\n $ HasHealthcare       : Factor w/ 2 levels \"0\",\"1\": 2 1 2 2 2 2 2 2 2 2 ...\n $ ExpensiveTreatment  : Factor w/ 2 levels \"0\",\"1\": 1 2 2 1 1 1 1 1 1 1 ...\n $ GeneralHealth       : Factor w/ 5 levels \"1\",\"2\",\"3\",\"4\",..: 5 3 5 2 2 2 3 3 5 2 ...\n $ BadMentalHealth     : num [1:253680] 18 0 30 0 3 0 0 0 30 0 ...\n $ BadPhysicalHealth   : num [1:253680] 15 0 30 0 0 2 14 0 30 0 ...\n $ DifficultyWalking   : Factor w/ 2 levels \"0\",\"1\": 2 1 2 1 1 1 1 2 2 1 ...\n $ Sex                 : Factor w/ 2 levels \"0\",\"1\": 1 1 1 1 1 2 1 1 1 2 ...\n $ Age                 : Factor w/ 13 levels \"1\",\"2\",\"3\",\"4\",..: 9 7 9 11 11 10 9 11 9 8 ...\n $ Education           : Factor w/ 6 levels \"1\",\"2\",\"3\",\"4\",..: 4 6 4 3 5 6 6 4 5 4 ...\n $ Income              : Factor w/ 8 levels \"1\",\"2\",\"3\",\"4\",..: 3 1 8 6 4 8 7 4 1 3 ...\n\n\nReview of our data frame structure shows that we have successfully renamed our variables and converted the categorical variables to factors.\nNext we will generate a summary of the variables to provide insight on what we will expect to see during our EDA.\n\nprint(list(\"Summary of Diabetes Data Frame Variables\"=summary(diabetes_df)))\n\n$`Summary of Diabetes Data Frame Variables`\n HasDiabetes HighBP     HighCholesterol CholesterolChecked      BMI       \n 0:218334    0:144851   0:146089        0:  9470           Min.   :12.00  \n 1: 35346    1:108829   1:107591        1:244210           1st Qu.:24.00  \n                                                           Median :27.00  \n                                                           Mean   :28.38  \n                                                           3rd Qu.:31.00  \n                                                           Max.   :98.00  \n                                                                          \n Smoker     Stroke     HeartDiseaseorAttack PhysActivity ConsumesFruits\n 0:141257   0:243388   0:229787             0: 61760     0: 92782      \n 1:112423   1: 10292   1: 23893             1:191920     1:160898      \n                                                                       \n                                                                       \n                                                                       \n                                                                       \n                                                                       \n ConsumesVeggies HeavyAlcoholUse HasHealthcare ExpensiveTreatment GeneralHealth\n 0: 47839        0:239424        0: 12417      0:232326           1:45299      \n 1:205841        1: 14256        1:241263      1: 21354           2:89084      \n                                                                  3:75646      \n                                                                  4:31570      \n                                                                  5:12081      \n                                                                               \n                                                                               \n BadMentalHealth  BadPhysicalHealth DifficultyWalking Sex       \n Min.   : 0.000   Min.   : 0.000    0:211005          0:141974  \n 1st Qu.: 0.000   1st Qu.: 0.000    1: 42675          1:111706  \n Median : 0.000   Median : 0.000                                \n Mean   : 3.185   Mean   : 4.242                                \n 3rd Qu.: 2.000   3rd Qu.: 3.000                                \n Max.   :30.000   Max.   :30.000                                \n                                                                \n      Age        Education      Income     \n 9      :33244   1:   174   8      :90385  \n 10     :32194   2:  4043   7      :43219  \n 8      :30832   3:  9478   6      :36470  \n 7      :26314   4: 62750   5      :25883  \n 11     :23533   5: 69910   4      :20135  \n 6      :19819   6:107325   3      :15994  \n (Other):87744              (Other):21594  \n\n\nBMI appears to be generally centered with outliers in the right tail. MentalHealth and PhysicalHealth both appear to have a tendency response of “0” in the survey. HighBP, HighCholesterol, Smoker, GeneralHealth, Sex and Age each have a fairly equal distribution of responses. The remaining binary variables of CholesterolChecked, Stroke, HeartDiseaseorAttack, PhysActivity, ConsumesFruits, ConsumesVeggies, HeavyAlcoholUse, HasHealthcare, ExpensiveTreatment, and DifficultyWalking each heavily favor one response over the other. The variables of Education and Income both show an increase in responses as the category range values increase.\n\n\n\n\nProduce meaningful summary stats and plots about the data being analyzed, particularly with how the variables relate to the response\nDo EDA on the complete data set\nEnsure narratives explain what we are exploring and what the summaries/graphs created say about the relationships in the data\n\nThe first variable we will investigate is HighBP. Review of the variable summary information shows\n\nprint(list(\"Summary of HighBP\"=summary(diabetes_df$HighBP)))\n\n$`Summary of HighBP`\n     0      1 \n144851 108829 \n\n\nthere are greater number of observations of PTs not having high blood pressure to those that do in a ratio of approximately 7:5. This is fairly close to being 1:1, so any differences between the HasDiabetes categories would be due to interactions between the variables.\nUsing a bar plot to observe HighBP with respect to HasDiabetes shows\n\nHighBP_by &lt;- diabetes_df |&gt;\n  group_by(HasDiabetes, HighBP) |&gt;\n  summarize(count = n())\n\nHighPB_plot &lt;- ggplot(HighBP_by, aes(HasDiabetes, count, fill=HighBP)) +\n  geom_bar(stat = \"identity\", position = position_dodge()) +\n  geom_text(aes(label = count), position = position_dodge(width=0.9), vjust=-0.25) +\n  scale_y_continuous(labels = comma) +\n  labs(title = \"Bar Plot of HighBP by HasDiabetes\", x=\"Has Diabetes\", y=\"# of PTs\")\n\nHighPB_plot\n\n\n\n\n\n\n\n\nthat the majority of PTs with diabetes have high blood pressure while the majority of PTs without diabetes do not have high blood pressure. The observations in the “No” HasDiabetes category have a “No” to “Yes” HighBP ratio of approximately 68:41, which is close to 2:1. The observations in the “Yes” HasDiabetes category have a “No” to “Yes” HighBP ratio of approximately 1:3. This flip in ratios between the HasDiabetes groups suggests that there is a relationship between HasDiabetes and HighBP.\nThe next variable that we will investigate is HighCholesterol. Review of the variable summary information shows\n\nprint(list(\"Summary of HighCholesterol\"=summary(diabetes_df$HighCholesterol)))\n\n$`Summary of HighCholesterol`\n     0      1 \n146089 107591 \n\n\nthere is approximately a 15:11 “No” to “Yes” ratio of HighCholesterol observations. This distribution is fairly close to being 1:1, so any differences between the HasDiabetes categories would be due to interactions between the variables.\nUsing a bar plot to observe HighCholesterol with respect to HasDiabetes we see\n\nHighCholesterol_by &lt;- diabetes_df |&gt;\n  group_by(HasDiabetes, HighCholesterol) |&gt;\n  summarize(count = n())\n\nHighCholesterol_plot &lt;- ggplot(HighCholesterol_by, aes(HasDiabetes, count, fill=HighCholesterol)) +\n  geom_bar(stat = \"identity\", position = position_dodge()) +\n  geom_text(aes(label = count), position = position_dodge(width=0.9), hjust=0.5) +\n  scale_y_continuous(labels = comma) +\n  labs(title=\"Bar Plot of HighCholesterol by HasDiabetes\", x=\"Has Diabetes\", y= \"# of PTs\") +\n  coord_flip()\n\nHighCholesterol_plot\n\n\n\n\n\n\n\n\nthat the ratios change between the HasDiabetes groups. While the ratios favor low cholesterol in the group without diabetes, they favor high cholesterol levels in the group with diabetes. There is approximately a 13:8 (nears 2:1) ratio of “No” to “Yes” HighCholesterol responses in the “No” HasDiabetes group. There is approximately a 11:23 (nears 1:2) ratio of “No” to “Yes” HighCholesterol responses in the “Yes” HasDiabetes group. The shift in ratios between the groups trending towards PTs with diabetes having high cholesterol suggests that there is a relationship between HasDiabetes and HighCholesterol.\nThe next variable we will investigate is CholesterolChecked. Review of the variable summary information shows\n\nprint(list(\"Summary of CholesterolChecked\"=summary(diabetes_df$CholesterolChecked)))\n\n$`Summary of CholesterolChecked`\n     0      1 \n  9470 244210 \n\n\nthat the overwhelming majority of PTs had their cholesterol checked at a ratio of 1:27 when compared to those who did not. Any differences between the HasDiabetes groups may be heavily influenced by the number of observations in each group more than the interaction between the variables. Review of a bar plot of CholesterolChecked with respect to HasDiabetes shows\n\nCholesterolChecked_by &lt;- diabetes_df |&gt;\n  group_by(HasDiabetes, CholesterolChecked) |&gt;\n  summarize(count = n())\n\n`summarise()` has grouped output by 'HasDiabetes'. You can override using the\n`.groups` argument.\n\nCholesterolChecked_plot &lt;- ggplot(CholesterolChecked_by, aes(HasDiabetes, count, fill=CholesterolChecked)) +\n  geom_bar(stat = \"identity\", position = position_dodge()) +\n  geom_text(aes(label = count), position = position_dodge(width=0.9), vjust=-0.25) +\n  scale_y_continuous(labels = comma) +\n  labs(title=\"Bar Plot of CholesterolChecked by HasDiabetes\", x=\"Has Diabetes\", y= \"# of PTs\")\n\nCholesterolChecked_plot\n\n\n\n\n\n\n\n\nthat the group of “Yes” CholesterolChecked responses dominates both categories of HasDiabetes.\nThe “No” HasDiabetes group has a “No” to “Yes” CholesterolChecked ratio of approximately 1:23. The “YES” HasDiabetes group has a “No” to “Yes” CholesterolChecked ratio of approximately 1:146. This information suggests that there is an increased likelihood of a PT having diabetes if they have their cholesterol checked. Because it is unlikely that checking cholesterol levels will cause diabetes, CholesterolChecked is not a good variable for use in prediction modeling.\nThe next variable we will investigte is BMI. Review of the variable summary information shows\n\nprint(list(\"Summary of BMI\"=summary(diabetes_df$BMI)))\n\n$`Summary of BMI`\n   Min. 1st Qu.  Median    Mean 3rd Qu.    Max. \n  12.00   24.00   27.00   28.38   31.00   98.00 \n\n\nthat the data has an IQR span of 7, a Median of 27, and Mean of 28.38. This tells us the data is tightly grouped together with the Min of 12 and Max of 98 being outliers. A histogram of BMI shows\n\nBMI_histogram &lt;- ggplot(diabetes_df, aes(BMI)) +\n  geom_histogram(aes(y=..density..), binwidth=1, fill=\"#CC0000\", color=\"lightgray\") +\n  labs(title=\"Histogram of BMI\", y=\"Density (# of PTs)\") +\n  scale_x_continuous(breaks = seq(0, 100, by = 10)) +\n  stat_function(fun=dnorm, args=list(mean=mean(diabetes_df$BMI), sd=sd(diabetes_df$BMI))) \n\nBMI_histogram\n\nWarning: The dot-dot notation (`..density..`) was deprecated in ggplot2 3.4.0.\nℹ Please use `after_stat(density)` instead.\n\n\n\n\n\n\n\n\n\nthat the data follows a generally normal distribution with some skewness to the right. The histogram also confirms there are outleirs in the BMI ranges of 12-14 and 50-98.\nSplitting the BMI histogram with respect to HasDiabetes shows\n\nBMI_by_histplot &lt;- ggplot(diabetes_df, aes(BMI)) +\n  geom_histogram(aes(y=..density..), binwidth=1, fill=\"#CC0000\", color=\"lightgray\") +\n  labs(title=\"Histogram of BMI by HasDiabetes\", y=\"Density (# of PTs)\") +\n  scale_x_continuous(breaks = seq(0, 100, by = 10)) +\n  stat_function(fun=dnorm, args=list(mean=mean(diabetes_df$BMI), sd=sd(diabetes_df$BMI))) +\n  facet_grid(~HasDiabetes)\n\nBMI_by_histplot\n\n\n\n\n\n\n\n\nthat the distribution of observations in the “No” HasDiabetes group has a center near a BMI of 25 while the “Yes” HasDiabetes group has a center near a BMI of 30 Review of side by side box and whisker plots for the HasDiabetes subgroups\n\nBMI_by_boxwplot &lt;- ggplot(diabetes_df, aes(HasDiabetes, BMI)) +\n  geom_boxplot(aes(group=HasDiabetes), fill=\"#CC0000\") +\n  scale_y_continuous(breaks = seq(0, 100, by = 10)) +\n  labs(title=\"Box Plot of BMI by HasDiabetes\")\n\nBMI_by_boxwplot\n\n\n\n\n\n\n\n\nconfirms that the Median, Mean, and IQR spreads for the “Yes” HasDiabetes group are all higher than those of the “No” group. Additionally, the box plot identifies that there is a shared oultier BMI range of 46-98.\nLooking back at the BMI histogram, the data in the BMI range of 12-14 and 46-50 appear to be inside of 3 standard deviations from the center. Because of this we determine how many BMI values are greater than 50 and how much of the data set those values make up.\n\nhighrange &lt;- sum(diabetes_df$BMI &gt; 50)\n\nprint(list(\"Number of BMI Oultiers\"=highrange))\n\n$`Number of BMI Oultiers`\n[1] 2175\n\nprint(list(\"BMI Outlier portion of data set\"=highrange/nrow(diabetes_df)))\n\n$`BMI Outlier portion of data set`\n[1] 0.008573794\n\n\nWe identified there are of 2175 observations that are outliers, which account for less than 1% of the data set. It would be reasonable to remove these observations from the data set before prediction model training. Analysis of BMI indicates that it appears to be a suitable variable for prediction modeling after removal of the outleirs. The next varaible we’re going to analyze is Smoker. Review of the variable summary shows that\n\nprint(list(\"Summary of Smoker\"=summary(diabetes_df$Smoker)))\n\n$`Summary of Smoker`\n     0      1 \n141257 112423 \n\n\nthe ratio of smokers to non-smokers in the study is approximately 14:11. This is distribution between the groups is fairly close to a 1:1 distribution. Any differences between the HasDiabetes groups will be due to interactions between the two variables. Reviewing the bar plot of Smoker with respect to HasDiabetes shows\n\nSmoker_by &lt;- diabetes_df |&gt;\n  group_by(HasDiabetes, Smoker) |&gt;\n  summarize(count = n())\n\n`summarise()` has grouped output by 'HasDiabetes'. You can override using the\n`.groups` argument.\n\nSmoker_plot &lt;- ggplot(Smoker_by, aes(HasDiabetes, count, fill=Smoker)) +\n  geom_bar(stat = \"identity\", position = position_dodge()) +\n  geom_text(aes(label = count), position = position_dodge(width=0.9), hjust=0.5) +\n  scale_y_continuous(labels = comma) +\n  labs(title=\"Bar Plot of Smoker by HasDiabetes\", x=\"Has Diabetes\", y= \"# of PTs\") +\n  coord_flip()\n\nSmoker_plot\n\n\n\n\n\n\n\n\nshows that the “No” HasDiabetes group has a “No” to “Yes” Smoker distribution of approximately 62:47 which is closer to a 1:1 distribution than a 2:1 distribution. The “Yes” HasDiabetes group has a “No” to “Yes” Smoker distribution of approximately 17:18 which also nears a 1:1 distribution. While the ratios shifts indicate that smokers have a higher likelihood of having diabetes than non smokers, neither Smoker group separates itself from the variable in both HasDiabetes categories. Smoker is not a suitable variable for inclusion in our prediction model.\nThe next variable we are going to analyze is Stroke. Review of the variable summary shows\n\nprint(list(\"Summary of Stroke\"=summary(diabetes_df$Stroke)))\n\n$`Summary of Stroke`\n     0      1 \n243388  10292 \n\n\nthat Stroke has a 24:1 “No” to “Yes” ratio. This suggests that any differences between the HasDiabetes groups may be heavily influenced by the number of observations in each group more than the interaction between the variables. Review of a bar plot for Stroke with respect to HasDiabetes shows\n\nStroke_by &lt;- diabetes_df |&gt;\n  group_by(HasDiabetes, Stroke) |&gt;\n  summarize(count = n())\n\n`summarise()` has grouped output by 'HasDiabetes'. You can override using the\n`.groups` argument.\n\nStroke_plot &lt;- ggplot(Stroke_by, aes(HasDiabetes, count, fill=Stroke)) +\n  geom_bar(stat = \"identity\", position = position_dodge()) +\n  geom_text(aes(label = count), position = position_dodge(width=0.9), vjust=-0.25) +\n  scale_y_continuous(labels = comma) +\n  labs(title=\"Bar Plot of Stroke by HasDiabetes\", x=\"Has Diabetes\", y= \"# of PTs\") \n\nStroke_plot\n\n\n\n\n\n\n\n\nthat the Stroke “No” group is prominent in both groups of HasDiabetes. The “No” HasDiabetes group has a “No to”Yes” Stroke ratio of approximately 211:7 which is close to 30:1. The “Yes” HasDiabetes group has a “No to”Yes” Stroke ratio of approximately 32:3 which is close to 11:1. While still favoring the “No” Stroke group, the reduction in ratios indicates that there is a relationship between Stroke and HasDiabetes. However, the relationship appears to be where someone who had a stroke is likely to also have diabetes, but not someone who has diabetes is likely to have had a stroke. Stroke does not appear to be suitable for inclusion in the prediction model.\nThe next variable we are going to analyze is HeartDisesaseorAttack. Summary information shows\n\nprint(list(\"Summary of HeartDiseaseorAttack\"=summary(diabetes_df$HeartDiseaseorAttack)))\n\n$`Summary of HeartDiseaseorAttack`\n     0      1 \n229787  23893 \n\n\nthat the ratio between the “No” and “Yes” HeartDiseaseorAttack groups is approximately 23:2 which is slightly larger than 11:1. Review of a bar plot for HeartDiseaseorAttack with respect to HasDiabetes shows\n\nHeartDiseaseorAttack_by &lt;- diabetes_df |&gt;\n  group_by(HasDiabetes, HeartDiseaseorAttack) |&gt;\n  summarize(count = n())\n\n`summarise()` has grouped output by 'HasDiabetes'. You can override using the\n`.groups` argument.\n\nHeartDiseaseorAttack_plot &lt;- ggplot(HeartDiseaseorAttack_by, aes(HasDiabetes, count, fill=HeartDiseaseorAttack)) +\n  geom_bar(stat = \"identity\", position = position_dodge()) +\n  geom_text(aes(label = count), position = position_dodge(width=0.9), hjust=0.5) +\n  scale_y_continuous(labels = comma) +\n  labs(title=\"Bar Plot of HeartDiseaseorAttack by HasDiabetes\", x=\"Has Diabetes\", y= \"# of PTs\") +\n  coord_flip()\n\nHeartDiseaseorAttack_plot\n\n\n\n\n\n\n\n\nshows that the “No” HeartDiseaseorAttack group is noticably larger than the “Yes” group for each category of HasDiabetes. The “No” HeartDisease group has a “No” to “Yes” HeartDiseaseorAttack ratio of approximately 10:1. The “Yes” HeartDisease group has a “No” to “Yes” HeartDiseaseorAttack ratio of 27:7 which nears 4:1. The ratio change between the HasDiabetes groups suggests that there is a relationship between the variables. However, this relationship appears to be one where someone having diabetes can be used to predict if they have heart disease or have experienced a heart attack, which is not what we’re trying to predict. HeartDiseaseorAttack does not appear to be suitable for inclusion in the prediction model.\nThe next variable we will summarize is PhysActivity. Review of the variable summary information shows\n\nprint(list(\"Summary of PhysicalActivity\"= summary(diabetes_df$PhysActivity)))\n\n$`Summary of PhysicalActivity`\n     0      1 \n 61760 191920 \n\n\nthe ratio of “No” to “Yes” responses is approximately 6:19 which is slightly less than 1:3. This suggests that differences between the HasDiabetes groups may be influenced by the number of “Yes” PhysActivity observations. Review of a bar plot of PhysActivity with respect to HasDiabetes shows\n\nPhysActivity_by &lt;- diabetes_df |&gt;\n  group_by(HasDiabetes, PhysActivity) |&gt;\n  summarize(count = n())\n\n`summarise()` has grouped output by 'HasDiabetes'. You can override using the\n`.groups` argument.\n\nPhysActivity_plot &lt;- ggplot(PhysActivity_by, aes(HasDiabetes, count, fill=PhysActivity)) +\n  geom_bar(stat = \"identity\", position = position_dodge()) +\n  geom_text(aes(label = count), position = position_dodge(width=0.9), vjust=-0.25) +\n  scale_y_continuous(labels = comma) +\n  labs(title=\"Bar Plot of PhysActivity by HasDiabetes\", x=\"Has Diabetes\", y= \"# of PTs\") \n\nPhysActivity_plot\n\n\n\n\n\n\n\n\nPhysActivity is greater in both HasDiabetes groups. The “No” HeartDisease group has a “No” to “Yes” PhysActivity ratio of approximately 5:17 which is slightly less than 1:3. The “Yes” HeartDisease group has a “No” to “Yes” PhysActivity ratio of approximately 13:22 which is slightly greater than 1:2. This change in ratios shows that there is a relationship between the variables. The relationship appears to be one where someone having diabetes can be used to predict if they participate in physical activity or not, which is not what we’re trying to predict. PhysActivity does not appear to be suitable for inclusion in the prediction model.\nThe next variable we’re going to summarize is ConsumesFruits. Review of the variable summary information shows\n\nprint(list(\"Summary of ConsumesFruits\"=summary(diabetes_df$ConsumesFruits)))\n\n$`Summary of ConsumesFruits`\n     0      1 \n 92782 160898 \n\n\nthat ConsumesFruits has a “No” to “Yes” ratio of approximately 9:16, which is slightly greater than a 1:2 distribution. Review of a bar graph of ConsumesFruits with respect to HasDiabetes shows\n\nConsumesFruits_by &lt;- diabetes_df |&gt;\n  group_by(HasDiabetes, ConsumesFruits) |&gt;\n  summarize(count = n())\n\n`summarise()` has grouped output by 'HasDiabetes'. You can override using the\n`.groups` argument.\n\nConsumesFruits_plot &lt;- ggplot(ConsumesFruits_by, aes(HasDiabetes, count, fill=ConsumesFruits)) +\n  geom_bar(stat = \"identity\", position = position_dodge()) +\n  geom_text(aes(label = count), position = position_dodge(width=0.9), hjust=0.5) +\n  scale_y_continuous(labels = comma) +\n  labs(title=\"Bar Plot of ConsumesFruits by HasDiabetes\", x=\"Has Diabetes\", y= \"# of PTs\") +\n  coord_flip()\n\nConsumesFruits_plot\n\n\n\n\n\n\n\n\nthat both groups of HasDiabetes have a greater number of “Yes” ConsumesFruits observations. The “No” HasDiabetes group has a “No” to “Yes” ConsumesFruits ratio of approximately 8:14 which is slightly greater than 1:2. The “Yes” HasDiabetes group has a “No” to “Yes” ConsumesFruits ratio of approximately 15:21 which is slightly greater than 2:3. This change in ratios shows that there is a relationship between the variables. However, the relationship appears to be one where someone having diabetes can be used to predict if they eat fruits or not, which is not what we’re tyring to predict. ConsumesFruits does not appear to be suitable for inclusion in the prediction model.\nThe next variabel we’re going to summarize is **ConsumesVeggies*. Review of the variable summary information shows\n\nprint(list(\"Summary of ConsumesVeggies\"=summary(diabetes_df$ConsumesVeggies)))\n\n$`Summary of ConsumesVeggies`\n     0      1 \n 47839 205841 \n\n\nthat the proporiton of “No” to “Yes” responses is approximately 5:21 which is slightly less than 1:4. Review of a bar plot of ConsumesVeggies with respect to HasDiabetes shows\n\nConsumesVeggies_by &lt;- diabetes_df |&gt;\n  group_by(HasDiabetes, ConsumesVeggies) |&gt;\n  summarize(count = n())\n\n`summarise()` has grouped output by 'HasDiabetes'. You can override using the\n`.groups` argument.\n\nConsumesVeggies_plot &lt;- ggplot(ConsumesVeggies_by, aes(HasDiabetes, count, fill=ConsumesVeggies)) +\n  geom_bar(stat = \"identity\", position = position_dodge()) +\n  geom_text(aes(label = count), position = position_dodge(width=0.9), vjust=-0.25) +\n  scale_y_continuous(labels = comma) +\n  labs(title=\"Bar Plot of ConsumesVeggies by HasDiabetes\", x=\"Has Diabetes\", y= \"# of PTs\") \n\nConsumesVeggies_plot\n\n\n\n\n\n\n\n\nthat the “Yes” ConsumesVeggies observations are substantially greater in both categories of HasDiabetes. The “No” HasDiabetes group has a “No” to “Yes” ConsumesVeggies ratio of approximately 2:9 which is slightly less than 1:4. The “Yes” HasDiabetes group has a “No” to “Yes” ConsumesVeggies ratio of approximately 1:3. The change in ratios between the HasDiabetes groups shows that there is a relationship between the variables. However, the relationship appears to be one where someone having diabetes can be used to predict if they eat vegetables or not, which is not what we’re trying to predict. ConsumesVeggies does not appear to be suitable for inclusion in the prediction model.\nThe next variable we’re going to summarize is HeavyAlcoholUse. Review of the variable summary information shows\n\nprint(list(\"Summary of HeavyAlcoholUse\"=summary(diabetes_df$HeavyAlcoholUse)))\n\n$`Summary of HeavyAlcoholUse`\n     0      1 \n239424  14256 \n\n\nshows that the ratio of “No” to “Yes” responses is approximately 24:1. This suggests that any differences between the HasDiabetes groups may be influenced by the number of observations. Reviewing the bar plot of HeavyAlcoholUse with respect to **HeartDisease* shows\n\nHeavyAlcoholUse_by &lt;- diabetes_df |&gt;\n  group_by(HasDiabetes, HeavyAlcoholUse) |&gt;\n  summarize(count = n())\n\n`summarise()` has grouped output by 'HasDiabetes'. You can override using the\n`.groups` argument.\n\nHeavyAlcoholUse_plot &lt;- ggplot(HeavyAlcoholUse_by, aes(HasDiabetes, count, fill=HeavyAlcoholUse)) +\n  geom_bar(stat = \"identity\", position = position_dodge()) +\n  geom_text(aes(label = count), position = position_dodge(width=0.9), hjust=0.5) +\n  scale_y_continuous(labels = comma) +\n  labs(title=\"Bar Plot of HeavyAlcoholUse by HasDiabetes\", x=\"Has Diabetes\", y= \"# of PTs\") +\n  coord_flip()\n\nHeavyAlcoholUse_plot\n\n\n\n\n\n\n\n\nthat the “No” HeavyAlcoholUse responses constitute the majority of observations in both HasDiabetes groups. The “No” HasDiabetes group has a “No” to “Yes” HeavyAlcoholUse ratio of approximately 205:13 which reduces close to 16:1. The “Yes” HasDiabetes group has a “No” to “Yes” HeavyAlcoholUse ratio of approximately 345:8 which reduces close to 43:1. The change in ratios shows that there is a relationship between the variables. However, the relationship appears to be one where someone having diabetes can be used to predict if they consume alcohol heavily, which is not what we’re trying to predict. HeavyAlcoholUse does not appear to be suitable for inclusion in the prediction model.\nThe next variable we’re going to summarize is HasHealthcare. Review of the variable summary information\n\nprint(list(\"Summary of HasHealthcare\"=summary(diabetes_df$HasHealthcare)))\n\n$`Summary of HasHealthcare`\n     0      1 \n 12417 241263 \n\n\nshows that the ratio of “No” to “Yes” observations is approximately 12:241 which is close to a 1:20 ratio. This is suggestive that any differences between the HasDiabetes categories may be heavily influenced by the number of responses in each. Reviewing the bar chart of HasHealthcare with respect to HasDiabetes shows\n\nHasHealthcare_by &lt;- diabetes_df |&gt;\n  group_by(HasDiabetes, HasHealthcare) |&gt;\n  summarize(count = n())\n\n`summarise()` has grouped output by 'HasDiabetes'. You can override using the\n`.groups` argument.\n\nHasHealthcare_plot &lt;- ggplot(HasHealthcare_by, aes(HasDiabetes, count, fill=HasHealthcare)) +\n  geom_bar(stat = \"identity\", position = position_dodge()) +\n  geom_text(aes(label = count), position = position_dodge(width=0.9), vjust=-0.25) +\n  scale_y_continuous(labels = comma) +\n  labs(title=\"Bar Plot of HasHealthcare by HasDiabetes\", x=\"Has Diabetes\", y= \"# of PTs\") \n\nHasHealthcare_plot\n\n\n\n\n\n\n\n\nthe “Yes” HasHealthcare observations are substantially higher than the “No” responses for both categories of **HasDiabetes*. The “No” HasDiabetes group has a “No” to “Yes” HasHealthcare ratio of approximately 11:207 which reduces close to 1:19. The “Yes” HasDiabetes group has a “No” to “Yes” HasHealthcare ratio of approximately 14:339 which reduces close to 1:24. The ratios in both groups of HasDiabetes do not differ much from the overall HasHealthcare variable ratio of 1:20. HasHealthcare does not appear to be suitable for inclusion in the prediction model.\nThe next variable we’re going to summarize is ExpensiveTreatment. Review of the variable summary information\n\nprint(list(\"Summary of ExpensiveTreatment\"=summary(diabetes_df$ExpensiveTreatment)))\n\n$`Summary of ExpensiveTreatment`\n     0      1 \n232326  21354 \n\n\nthat the ration of “No” to “Yes” observations is approximately 232:21 which reduces near 11:1. This is suggestive that any differences between the HasDiabetes categories may be heavily influenced by the number of repsonses in each. Reviwing the bar chart of ExpensiveTreatment with respect to HasDiabetes shows\n\nExpensiveTreatment_by &lt;- diabetes_df |&gt;\n  group_by(HasDiabetes, ExpensiveTreatment) |&gt;\n  summarize(count = n())\n\n`summarise()` has grouped output by 'HasDiabetes'. You can override using the\n`.groups` argument.\n\nExpensiveTreatment_plot &lt;- ggplot(ExpensiveTreatment_by, aes(HasDiabetes, count, fill=ExpensiveTreatment)) +\n  geom_bar(stat = \"identity\", position = position_dodge()) +\n  geom_text(aes(label = count), position = position_dodge(width=0.9), hjust=0.5) +\n  scale_y_continuous(labels = comma) +\n  labs(title=\"Bar Plot of ExpensiveTreatment by HasDiabetes\", x=\"Has Diabetes\", y= \"# of PTs\") +\n  coord_flip()\n\nExpensiveTreatment_plot\n\n\n\n\n\n\n\n\nthe “No” observations are substantially greater than the “Yes” responses for both categories of HasDiabetes. The “No” HasDiabetes group has a “No” to “Yes” ExpensiveTreatment ratio of approximately 201:17 which reduces close to 12:1. The “Yes” HasDiabetes group has a “No” to “Yes” ExpensiveTreatment ratio of approximately 316:37 which reduces close to 9:1. There appears to be a relationship between the variables where someone with diabetes has a greater likelihood of not seeking treatment due to the cost, but that is not what we’re trying to predict. ExpensiveTreatment does not appear to be suitbale for inclusion in the prediciton model.\nThe next variable we’re going to summarize is GeneralHealth. Review of the variable summary information\n\nprint(list(\"Summary of GeneralHealth\"=summary(diabetes_df$GeneralHealth)))\n\n$`Summary of GeneralHealth`\n    1     2     3     4     5 \n45299 89084 75646 31570 12081 \n\n\nshows that the majority of patients reported being in “Excellent” to “Good” health. Reviewing the bar chart of GeneralHealth with respect to HasDiabetes shows\n\nGeneralHealth_by &lt;- diabetes_df |&gt;\n  group_by(HasDiabetes, GeneralHealth) |&gt;\n  summarize(count = n())\n\n`summarise()` has grouped output by 'HasDiabetes'. You can override using the\n`.groups` argument.\n\nGeneralHealth_plot &lt;- ggplot(GeneralHealth_by, aes(HasDiabetes, count, fill=GeneralHealth)) +\n  geom_bar(stat = \"identity\", position = position_dodge()) +\n  geom_text(aes(label = count), position = position_dodge(width=0.9), vjust=-0.25) +\n  scale_y_continuous(labels = comma) +\n  labs(title=\"Bar Plot of GeneralHealth by HasDiabetes\", x=\"Has Diabetes\", y= \"# of PTs\") \n\nGeneralHealth_plot\n\n\n\n\n\n\n\n\nthat there is a shift in the reporting tendencies between the HasDiabetes categories. The “No” HasDiabetes group has a central tendency of “Very Good” followed by “Good” GeneralHealth responses while the “Yes” HasDiabetes group has a central tendency of “Good” followed by “Fair” GeneralHealth responses\n\nNoDiabetes_high_three &lt;- sum(GeneralHealth_by$count[1:3])/sum(GeneralHealth_by$count[1:5])\nNoDiabetes_fourth &lt;- GeneralHealth_by$count[4]/sum(GeneralHealth_by$count[1:5])\n\nYesDiabetes_high_three &lt;- sum(GeneralHealth_by$count[7:9])/sum(GeneralHealth_by$count[6:10]) \nYesDiabetes_fourth &lt;- GeneralHealth_by$count[10]/sum(GeneralHealth_by$count[6:10])\n\nprint(list(\"GeneralHealth 1 through 3, HasDiabetes in 'No'\"=NoDiabetes_high_three, \"GeneralHealth 4, HasDiabetes in 'No'\"=NoDiabetes_fourth, \"GeneralHealth 2 through 4, HasDiabetes in 'Yes'\"=YesDiabetes_high_three, \"GeneralHealth 5, HasDiabetes in 'Yes'\"=NoDiabetes_fourth))\n\n$`GeneralHealth 1 through 3, HasDiabetes in 'No'`\n[1] 0.8658798\n\n$`GeneralHealth 4, HasDiabetes in 'No'`\n[1] 0.09975542\n\n$`GeneralHealth 2 through 4, HasDiabetes in 'Yes'`\n[1] 0.8382278\n\n$`GeneralHealth 5, HasDiabetes in 'Yes'`\n[1] 0.09975542\n\n\nReview of the GeneralHealth response proportions in the “No” HasDiabetes group shows that over 86.59% of the observations reported having a GeneralHealth status of “Good” or better for the three highest responses with the 4th highest response of “Fair” accounting for another 9.98% of group responses. Review of the GeneralHealth response proportions in the “Yes” HasDiabetes shows that over 83.82% of the observations reported having a GeneralHealth status of “Very Good” to “Fair” for the three highest responses with the fourth highest response of “Poor” accounting for another 9.98% of group responses. The shift in GeneralHealth tendency between the HasDiabetes groups suggests that there is a relationship between the variables. GeneralHealth appears to be a suitable variable for prediciton modeling.\nThe next variable we’re going to summarize is BadMentalHealth. Review of the variable summary information\n\nprint(list(\"Summary of BadMentalHealth\"=summary(diabetes_df$BadMentalHealth)))\n\n$`Summary of BadMentalHealth`\n   Min. 1st Qu.  Median    Mean 3rd Qu.    Max. \n  0.000   0.000   0.000   3.185   2.000  30.000 \n\n\nshows that there is a tendency for the PTs to report that their mental health was not good for zero days.\nReview of a histogram of the variable along with histograms of MentalHealth with respect to HasDiabetes shows\n\nBadMentalHealth_histogram &lt;- ggplot(diabetes_df, aes(BadMentalHealth)) +\n  geom_histogram(aes(y=..density..), binwidth=1, fill=\"#CC0000\", color=\"lightgray\") +\n  scale_x_continuous(breaks = seq(0, 30, by = 5)) +\n  scale_y_continuous(breaks = seq(0, 1, by = 0.05)) +\n  labs(title=\"Histogram of BadMentalHealth\", x=\"# of Days Mental Health Not Good\", y=\"Density (# of PTs)\")\n\nBadMentalHealth_histogram\n\n\n\n\n\n\n\nBadMentalHealth_by_histplot &lt;- ggplot(diabetes_df, aes(BadMentalHealth)) +\n  geom_histogram(aes(y=..density..), binwidth=1, fill=\"#CC0000\", color=\"lightgray\") +\n  labs(title=\"Histogram of BadMentalHealth by HasDiabetes\", y=\"Density (# of PTs)\") +\n  scale_x_continuous(breaks = seq(0, 30, by = 5)) +\n  scale_y_continuous(breaks = seq(0, 1, by = 0.05)) +\n  facet_grid(~HasDiabetes)\n\nBadMentalHealth_by_histplot\n\n\n\n\n\n\n\n\nthat the majority of the observations in both categories of HasDiabetes follow the similar trend where the majority of non-zero values in BadMentalHealth are in the range of 1-10 days. After remvoing the zero values for analysis, we compared the proportions of 10-day BadMentalHealth ranges between the HasDiabetes groups.\n\nBadMentalHealth_by_nozero &lt;- diabetes_df |&gt;\n  group_by(HasDiabetes, BadMentalHealth) |&gt;\n  filter(BadMentalHealth &gt;= 1) |&gt;\n  summarize(count=n())\n\n`summarise()` has grouped output by 'HasDiabetes'. You can override using the\n`.groups` argument.\n\nprint(BadMentalHealth_by_nozero, n=60)\n\n# A tibble: 60 × 3\n# Groups:   HasDiabetes [2]\n   HasDiabetes BadMentalHealth count\n   &lt;fct&gt;                 &lt;dbl&gt; &lt;int&gt;\n 1 0                         1  7726\n 2 0                         2 11546\n 3 0                         3  6457\n 4 0                         4  3300\n 5 0                         5  7807\n 6 0                         6   824\n 7 0                         7  2695\n 8 0                         8   529\n 9 0                         9    78\n10 0                        10  5309\n11 0                        11    38\n12 0                        12   331\n13 0                        13    33\n14 0                        14   969\n15 0                        15  4482\n16 0                        16    74\n17 0                        17    43\n18 0                        18    77\n19 0                        19    12\n20 0                        20  2701\n21 0                        21   179\n22 0                        22    52\n23 0                        23    30\n24 0                        24    27\n25 0                        25   915\n26 0                        26    38\n27 0                        27    67\n28 0                        28   270\n29 0                        29   128\n30 0                        30  9320\n31 1                         1   812\n32 1                         2  1508\n33 1                         3   924\n34 1                         4   489\n35 1                         5  1223\n36 1                         6   164\n37 1                         7   405\n38 1                         8   110\n39 1                         9    13\n40 1                        10  1064\n41 1                        11     3\n42 1                        12    67\n43 1                        13     8\n44 1                        14   198\n45 1                        15  1023\n46 1                        16    14\n47 1                        17    11\n48 1                        18    20\n49 1                        19     4\n50 1                        20   663\n51 1                        21    48\n52 1                        22    11\n53 1                        23     8\n54 1                        24     6\n55 1                        25   273\n56 1                        26     7\n57 1                        27    12\n58 1                        28    57\n59 1                        29    30\n60 1                        30  2768\n\nHasDiabetesNo_first_ten &lt;- list(\"HasDiabetesNo, BadMentalHealth, 1-10 days proprotion of data\" =sum(BadMentalHealth_by_nozero$count[1:10])/sum(BadMentalHealth_by_nozero$count[1:30]))\n\nHasDiabetesNo_middle_ten &lt;- list(\"HasDiabetesNo, BadMentalHealth, 11-20 days proprotion of data\" =sum(BadMentalHealth_by_nozero$count[11:20])/sum(BadMentalHealth_by_nozero$count[1:30]))\n\nHasDiabetesNo_last_ten &lt;- list(\"HasDiabetesNo, BadMentalHealth, 21-30 days proprotion of data\" =sum(BadMentalHealth_by_nozero$count[21:30])/sum(BadMentalHealth_by_nozero$count[1:30]))\n\nHasDiabetesYes_first_ten &lt;- list(\"HasDiabetesYes, BadMentalHealth, 1-10 days proprotion of data\"=sum(BadMentalHealth_by_nozero$count[31:40])/sum(BadMentalHealth_by_nozero$count[31:60]))\n\nHasDiabetesYes_middle_ten &lt;- list(\"HasDiabetesYes, BadMentalHealth, 11-20 days proprotion of data\"=sum(BadMentalHealth_by_nozero$count[41:50])/sum(BadMentalHealth_by_nozero$count[31:60]))\n\nHasDiabetesYes_last_ten &lt;- list(\"HasDiabetesYes, BadMentalHealth, 20-30 days proprotion of data\"=sum(BadMentalHealth_by_nozero$count[51:60])/sum(BadMentalHealth_by_nozero$count[31:60]))\n\nprint(c(HasDiabetesNo_first_ten, HasDiabetesYes_first_ten, HasDiabetesNo_middle_ten, HasDiabetesYes_middle_ten, HasDiabetesNo_last_ten, HasDiabetesYes_last_ten))\n\n$`HasDiabetesNo, BadMentalHealth, 1-10 days proprotion of data`\n[1] 0.7004708\n\n$`HasDiabetesYes, BadMentalHealth, 1-10 days proprotion of data`\n[1] 0.5620028\n\n$`HasDiabetesNo, BadMentalHealth, 11-20 days proprotion of data`\n[1] 0.1326127\n\n$`HasDiabetesYes, BadMentalHealth, 11-20 days proprotion of data`\n[1] 0.1683832\n\n$`HasDiabetesNo, BadMentalHealth, 21-30 days proprotion of data`\n[1] 0.1669165\n\n$`HasDiabetesYes, BadMentalHealth, 20-30 days proprotion of data`\n[1] 0.269614\n\n\nThe comparisons showed that the “No” HasDiabetes group had a 70% of their BadMentalHealth responses in the 1-10 day range while the “Yes” HasDiabetes group only had a 56.2% of their BadMentalHealth responses in the same range. Likewise, the “Yes” HasDiabetes group had higher percentages of responses in both the 11-20 day and 21-30 day BadMentalHealth ranges than the “No” HasDiabetes group. The change in “0” response density between the HasDiabetes groups appears to have shifted to longer periods of PTs with diabetes experiencing mental health that is not good. This shows that there is a relationship between the variables. BadMentalHealth appears to be suitable for prediction modeling.\nThe next variable we’re going to summarize is BadPhysicalHealth. Review of the variable summary information\n\nprint(list(\"Summary of PhysicalHealth\"=summary(diabetes_df$BadPhysicalHealth)))\n\n$`Summary of PhysicalHealth`\n   Min. 1st Qu.  Median    Mean 3rd Qu.    Max. \n  0.000   0.000   0.000   4.242   3.000  30.000 \n\n\nshows that like BadMentalHealth, the vast majority of BadPhysicalHealth responses provided were “0”. Reviewing a density plot histogram of BadPhysicalHealth along with histogram plots of BadPhysicalHealth with respect to HasDiabetes show\n\nBadPhysicalHealth_histogram &lt;- ggplot(diabetes_df, aes(BadPhysicalHealth)) +\n  geom_histogram(aes(y=..density..), binwidth=1, fill=\"#CC0000\", color=\"lightgray\") +\n  scale_x_continuous(breaks = seq(0, 30, by = 5)) +\n  scale_y_continuous(breaks = seq(0, 1, by = 0.05)) +\n  labs(title=\"Histogram of BadPhysicalHealth\", x=\"# of Days Mental Health Not Good\", y=\"Density (# of PTs)\")\n\nBadPhysicalHealth_histogram\n\n\n\n\n\n\n\nBadPhysicalHealth_by_histplot &lt;- ggplot(diabetes_df, aes(BadPhysicalHealth)) +\n  geom_histogram(aes(y=..density..), binwidth=1, fill=\"#CC0000\", color=\"lightgray\") +\n  labs(title=\"Histogram of BadPhysicalHealth by HasDiabetes\", y=\"Density (# of PTs)\") +\n  scale_x_continuous(breaks = seq(0, 30, by = 5)) +\n  scale_y_continuous(breaks = seq(0, 30, by = 0.05)) +\n  facet_grid(~HasDiabetes)\n\nBadPhysicalHealth_by_histplot\n\n\n\n\n\n\n\n\nthat like with BadMentalHealth, the density of the BadPhysicalHealth “0” response changes between the HasDiabetes groups. The general trend is that when compared to the “No” HasDiabetes group the “Yes” HasDiabetes densities in the 0-7 day range are lower and then overall higher among the remaining groups. Comparing the proportions of the 0-7day ranges to the 8-30 day ranges\n\nBadPhysicalHealth_by &lt;- diabetes_df |&gt;\n  group_by(HasDiabetes, BadMentalHealth) |&gt;\n  summarize(count=n())\n\n`summarise()` has grouped output by 'HasDiabetes'. You can override using the\n`.groups` argument.\n\nBadPhysHlth_DiabetesNo_firstSeven &lt;- list(\"BadPhysHealth 1-7 Days, Diabetes in 'No'\" = sum(BadPhysicalHealth_by$count[1:8])/sum(BadPhysicalHealth_by$count[1:31]))\n\nBadPhysHlth_DiabetesNo_lastTwentyThree &lt;- list(\"BadPhysHealth 8-30 Days, Diabetes in 'No'\" = sum(BadPhysicalHealth_by$count[9:31])/sum(BadPhysicalHealth_by$count[1:31]))\n\nBadPhysHlth_DiabetesYes_firstSeven &lt;- list(\"BadPhysHealth 1-7 Days, Diabetes in 'Yes'\" = sum(BadPhysicalHealth_by$count[32:39])/sum(BadPhysicalHealth_by$count[32:62]))\n\nBadPhysHlth_DiabetesYes_lastTwentyThree &lt;- list(\"BadPhysHealth 8-30 Days, Diabetes in 'Yes'\" = sum(BadPhysicalHealth_by$count[40:62])/sum(BadPhysicalHealth_by$count[32:62]))\n\nprint(c(BadPhysHlth_DiabetesNo_firstSeven, BadPhysHlth_DiabetesYes_firstSeven, BadPhysHlth_DiabetesNo_lastTwentyThree, BadPhysHlth_DiabetesYes_lastTwentyThree))\n\n$`BadPhysHealth 1-7 Days, Diabetes in 'No'`\n[1] 0.8822813\n\n$`BadPhysHealth 1-7 Days, Diabetes in 'Yes'`\n[1] 0.8184236\n\n$`BadPhysHealth 8-30 Days, Diabetes in 'No'`\n[1] 0.1177187\n\n$`BadPhysHealth 8-30 Days, Diabetes in 'Yes'`\n[1] 0.1815764\n\n\nconfirms that the visual assessments are correct. The “No” HasDiabetes group is 6.4 percentage points higher in the BadPhysicalHealth 0-7 day range compared to the “Yes” HasDiabetes group. This change in HasDiabetes suggests that there is a relationship between the variables. **BadPhysicalHealth* appears to be suitable for prediction modeling.\nThe next variable we’re going to summarize is DifficultyWalking. Reviewing the variable summary\n\nprint(list(\"Summary of DifficultyWalking\"=summary(diabetes_df$DifficultyWalking)))\n\n$`Summary of DifficultyWalking`\n     0      1 \n211005  42675 \n\n\nshows that the majority of PTs reported “No” at a ratio of approximately 211:43, which reduces to slightly less than 5:1. This suggests that any differences in the HasDiabetes groups will be highly influenced by the number of PTs in each. Reviewing the bar plot of DifficultyWalking with respect to HasDiabetes shows\n\nDifficultyWalking_by &lt;- diabetes_df |&gt;\n  group_by(HasDiabetes, DifficultyWalking) |&gt;\n  summarize(count = n())\n\n`summarise()` has grouped output by 'HasDiabetes'. You can override using the\n`.groups` argument.\n\nDifficultyWalking_plot &lt;- ggplot(DifficultyWalking_by, aes(HasDiabetes, count, fill=DifficultyWalking)) +\n  geom_bar(stat = \"identity\", position = position_dodge()) +\n  geom_text(aes(label = count), position = position_dodge(width=0.9), hjust=0.5) +\n  scale_y_continuous(labels = comma) +\n  labs(title=\"Bar Plot of DifficultyWalking by HasDiabetes\", x=\"Has Diabetes\", y= \"# of PTs\") +\n  coord_flip()\n\nDifficultyWalking_plot\n\n\n\n\n\n\n\n\nthat the majority of responses in both HasDiabetes groups fall under the “No” DifficultyWalking group. The observations in the “No” HasDiabetes category have a “No” to “Yes” DifficultyWalking ratio of approximately 188:30 which simplifies down to a ratio slightly greater than 6:1. The observations in the “Yes” HasDiabetes category have a “No” to “Yes” DifficultyWalking ratio of approximately 222:131 which simplifies down to closer to 2:1 than 1:1. The change in ratios suggests that there is a relationship between the variabels. However, the relationship appears to be one where someone having diabetes or not can help predict if they’ll have difficulty walking, but that is not what we’re trying to predict. DifficultyWalking does not appear to be a suitable variable for our prediction model.\nThe next variable we’re going to summarize is Sex. Reviewing the variable summary\n\nprint(list(\"Summary of Sex\"=summary(diabetes_df$Sex)))\n\n$`Summary of Sex`\n     0      1 \n141974 111706 \n\n\nshows that the distribution between the categories is almost uniform at a female to male ratio of approximately 142:111 which simplifies to a ratio slightly greater than 1:1. Reviewing the bar plot of Sex with respect to HasDiabetes shows\n\nSex_by &lt;- diabetes_df |&gt;\n  group_by(HasDiabetes, Sex) |&gt;\n  summarize(count = n())\n\n`summarise()` has grouped output by 'HasDiabetes'. You can override using the\n`.groups` argument.\n\nSex_plot &lt;- ggplot(Sex_by, aes(HasDiabetes, count, fill=Sex)) +\n  geom_bar(stat = \"identity\", position = position_dodge()) +\n  geom_text(aes(label = count), position = position_dodge(width=0.9), vjust=-0.25) +\n  scale_y_continuous(labels = comma) +\n  labs(title=\"Bar Plot of Sex by HasDiabetes\", x=\"Has Diabetes\", y= \"# of PTs\") \n\nSex_plot\n\n\n\n\n\n\n\n\nthat the number of females is greater in both HasDiabetes groups. The observations in the “No” HasDiabetes category have a “No” to “Yes” Sex ratio of approximately 124:95 which simplifies down to a ratio of slightly greater than 1:1. The observations in the “Yes” HasDiabetes category have a “No” to “Yes” Sex ratio of approximately 184:169 which also simplifies down to a ratio slightly greater than 1:1. The difference between the groups is minimal which suggests there is not a relationship between the variables. Sex does not appear suitable for our prediciton model.\nThe next variable we’re going to summarize is Age. Review of the variable summary\n\nprint(list(\"Summary of Age\"=summary(diabetes_df$Age)))\n\n$`Summary of Age`\n    1     2     3     4     5     6     7     8     9    10    11    12    13 \n 5700  7598 11123 13823 16157 19819 26314 30832 33244 32194 23533 15980 17363 \n\n\nshows that there is a trend where the number of responses increase in each category until group 9 (60-64), where they then decrease as from category 10 to 12 with group 13 being slightly higher than group 12. Reviewing histograms of Age with respect to HasDiabetes shows\n\nAge_by &lt;- diabetes_df |&gt;\n  group_by(HasDiabetes, Age) |&gt;\n  summarize(count = n())\n\n`summarise()` has grouped output by 'HasDiabetes'. You can override using the\n`.groups` argument.\n\nAge_plot &lt;- ggplot(Age_by, aes(HasDiabetes, count, fill=Age)) +\n  geom_bar(stat = \"identity\", position = position_dodge2()) +\n  geom_text(aes(label = count), position = position_dodge(width=0.9), vjust=-0.25, size=3) +\n  scale_y_continuous(labels = comma) +\n  labs(title=\"Bar Plot of Age by HasDiabetes\", x=\"Has Diabetes\", y= \"# of PTs\")\n\nAge_plot\n\n\n\n\n\n\n\n\nthat there a shift in distribution between the HasDiabetes groups. The “No” HasDiabetes group has central tendency around resonse “9” while the “Yes” HasDiabetes group has a central tendency around response “10”. Review of a summary table of the proportions between the HasDiabetes categories by groups shows\n\nAgeGrp &lt;- Age_by$Age[1:13]\n\nproportionNo &lt;- proportions(Age_by$count[1:13])\n\nproporitonYes &lt;-proportions(Age_by$count[14:26])\n\nAge_Diabetes &lt;- data.frame(AgeGrp, proportionNo, proporitonYes)\n\nAge_Diabetes &lt;- as_tibble(Age_Diabetes)\n\nprint(list(\"Summary Table of Age Proportions\"=Age_Diabetes))\n\n$`Summary Table of Age Proportions`\n# A tibble: 13 × 3\n   AgeGrp proportionNo proporitonYes\n   &lt;fct&gt;         &lt;dbl&gt;         &lt;dbl&gt;\n 1 1            0.0257       0.00221\n 2 2            0.0342       0.00396\n 3 3            0.0495       0.00888\n 4 4            0.0604       0.0177 \n 5 5            0.0692       0.0297 \n 6 6            0.0828       0.0493 \n 7 7            0.106        0.0874 \n 8 8            0.122        0.121  \n 9 9            0.126        0.162  \n10 10           0.117        0.186  \n11 11           0.0842       0.145  \n12 12           0.0576       0.0963 \n13 13           0.0648       0.0908 \n\nproportionNo_largestThree &lt;- sum(Age_Diabetes$proportionNo[8:10])\n\nproportionYes_largestThree &lt;- sum(Age_Diabetes$proporitonYes[9:11])\n\nprint(list(\"Cummulative Proportion of 3 largest Age groups, HasDiabetes - No\"=proportionNo_largestThree, \"Cummulative Proportion of 3 largest Age groups, HasDiabetes - Yes\"=proportionYes_largestThree))\n\n$`Cummulative Proportion of 3 largest Age groups, HasDiabetes - No`\n[1] 0.3651103\n\n$`Cummulative Proportion of 3 largest Age groups, HasDiabetes - Yes`\n[1] 0.4931817\n\n\nthat not only did the distributions shift between the age groups, but the highest three Age categories (8-10) in the “No” HasDiabetes group account for 36.51% of the group data while the highest three Age categories (9-11) in the “Yes” HasDiabetes category account for 49.32% of the group data. These shifts in proportions suggest that there is a relationship between the variables. Age appears to be suitable for prediction modeling.\nThe next variabel we’re going to summarize is Education. Review of the variable summary information\n\nprint(list(\"Summary of Education\"=summary(diabetes_df$Education)))\n\n$`Summary of Education`\n     1      2      3      4      5      6 \n   174   4043   9478  62750  69910 107325 \n\n\nshows that the responses increased in each category with the majority of observations belonging to category 6 (College 4yrs or more (College graduate)). Reviewing the bar plot of Education with respect to HasDiabetes shows\n\nEducation_by &lt;- diabetes_df |&gt;\n  group_by(HasDiabetes, Education) |&gt;\n  summarize(count = n())\n\n`summarise()` has grouped output by 'HasDiabetes'. You can override using the\n`.groups` argument.\n\nEducation_plot &lt;- ggplot(Education_by, aes(HasDiabetes, count, fill=Education)) +\n  geom_bar(stat = \"identity\", position = position_dodge2()) +\n  geom_text(aes(label = count), position = position_dodge(width=0.9), hjust=0.5) +\n  scale_y_continuous(labels = comma) +\n  labs(title=\"Bar Plot of Education by HasDiabetes\", x=\"Has Diabetes\", y= \"# of PTs\") +\n  coord_flip()\n\nEducation_plot\n\n\n\n\n\n\n\n\nshows that there is a definite change in the ratios of the Education gropus between the HasDiabetes groups. The “No” HasDiabetes group follows the same trend as the overall data while the “Yes” HasDiabetes group has a fairly uniform distribution between categories 4, 5, and 6. There does appear to be a relationship between the variables where we could determine there was a high probability that someone with diabetes has a high probability of having a high school diploma, GED, or higher education but the data does not lend itself to determining if a given education level can be used to predict if someone has diabetes. Education does not appear to be suitable for prediciton analysis.\nThe last variable that we’re going to summarize is Income. Review of the variable summary information\n\nprint(list(\"Summary of Income\"=summary(diabetes_df$Income)))\n\n$`Summary of Income`\n    1     2     3     4     5     6     7     8 \n 9811 11783 15994 20135 25883 36470 43219 90385 \n\n\nshows that the number of responses increase as the categories increase, with the largest group earning $75K per year or more. Reviewing a bar plot of Income with respect to HasDiabetes shows\n\nIncome_by &lt;- diabetes_df |&gt;\n  group_by(HasDiabetes, Income) |&gt;\n  summarize(count = n())\n\n`summarise()` has grouped output by 'HasDiabetes'. You can override using the\n`.groups` argument.\n\nIncome_plot &lt;- ggplot(Income_by, aes(HasDiabetes, count, fill=Income)) +\n  geom_bar(stat = \"identity\", position = position_dodge2()) +\n  geom_text(aes(label = count), position = position_dodge(width=0.9), vjust=-0.25, size=3) +\n  scale_y_continuous(labels = comma) +\n  labs(title=\"Bar Plot of Income by HasDiabetes\", x=\"Has Diabetes\", y= \"# of PTs\")\n\nIncome_plot\n\n\n\n\n\n\n\n\nthat there is a shift in proportions of Income group categories between the HasDiabetes groups. The Income groups with “No” HasDiabetes responses appear to have a quadratic relationship with a large positive slope between groups 7 and 8. The Income groups with “Yes” HasDiabetes responses appear to have a linear relationship with a small positive slope. There appears to be a relationship between the variables where a person with diabetes has a greater probability of earning less than $75K pe year, but that is not what we’re trying ot predcit. Income does not appear to be suitable for prediction modeling.\nNext, we will use the above information to generate prediction models here"
  },
  {
    "objectID": "FinalProjectModeling.html",
    "href": "FinalProjectModeling.html",
    "title": "Final Project",
    "section": "",
    "text": "Start with a basic introduction (it is permissible to repeat things from EDA file)\n\n\nVariables identified as being candidates for prediction modeling: HighBP, HighCholesterol, BMI, GeneralHealth, BadMentalHealth, BadPhysicalHealth, and Age.\nVariables identified as needing outliers removed: BMI\n\n\n# 70/30 split for training/testing subsets\n# Use set.seed() to make things reproducible \n\n\nThe goal is to create models for predicting the Diabetes_binary variable (using caret).\n\n2.1. Use logLoss with 5 fold cross-validation to select the best model.\n2.2. Research and write-up a paragraph about what log loss is and why we may prefer it to accuracy when predicting a binary response variable.\n\n\n\n\nProvide a reasonably thorough explanation of what a logsistic regression model is and why we apply it to this kind of data (response variable).\nFit three candidate logistic regression models and choose the best model using CV with log-loss as the metric.\n\n\n\n\n\nProvide a reasonably thorough explanation of what a classification tree model is and why we might try to use it.\nFit a classification tree with varying values for the complexity parameter (cp) and choose the best model.\n\n\n\n\n\nProvide a reasonably thorough explanation of what a classification tree model is and why we might use it (focus on differences between it and a classification tree).\nFit the random forest model and choose the best model.\n\n\n\n\n\nCompare the three best models and “declare an overall winner”"
  },
  {
    "objectID": "FinalProjectModeling.html#diabetes-health-indicators---modeling",
    "href": "FinalProjectModeling.html#diabetes-health-indicators---modeling",
    "title": "Final Project",
    "section": "",
    "text": "Start with a basic introduction (it is permissible to repeat things from EDA file)\n\n\nVariables identified as being candidates for prediction modeling: HighBP, HighCholesterol, BMI, GeneralHealth, BadMentalHealth, BadPhysicalHealth, and Age.\nVariables identified as needing outliers removed: BMI\n\n\n# 70/30 split for training/testing subsets\n# Use set.seed() to make things reproducible \n\n\nThe goal is to create models for predicting the Diabetes_binary variable (using caret).\n\n2.1. Use logLoss with 5 fold cross-validation to select the best model.\n2.2. Research and write-up a paragraph about what log loss is and why we may prefer it to accuracy when predicting a binary response variable.\n\n\n\n\nProvide a reasonably thorough explanation of what a logsistic regression model is and why we apply it to this kind of data (response variable).\nFit three candidate logistic regression models and choose the best model using CV with log-loss as the metric.\n\n\n\n\n\nProvide a reasonably thorough explanation of what a classification tree model is and why we might try to use it.\nFit a classification tree with varying values for the complexity parameter (cp) and choose the best model.\n\n\n\n\n\nProvide a reasonably thorough explanation of what a classification tree model is and why we might use it (focus on differences between it and a classification tree).\nFit the random forest model and choose the best model.\n\n\n\n\n\nCompare the three best models and “declare an overall winner”"
  }
]